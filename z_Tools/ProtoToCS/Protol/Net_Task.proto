syntax = "proto3";
import "Net_Ads.proto";
package Pb;
option go_package = "./pb";
/*
	任务

added by yh @ 2024/01/16 18:14
注意:
*/
enum ETaskStatus {
    Incomplete =0;//未完成
    Complete =1;//完成
    Got =2;//得到
}

enum ETask {
  TaskIdle =0;//空置占位没用
  Task1001 =1001;//登录游戏
  Task1002 =1002;//参加火龙宝藏2次
  Task1003 =1003;//参加金币房2次
  Task1004 =1004;//参加转盘1次
  Task1005 =1005;//参加多人混战1次
  Task1006 =1006;//领取广告奖励1次
  Task1007 =1007;//消耗金币数量达到100
  Task2001 =2001;//参加火龙宝藏5次
  Task2002 =2002;//参加金币房5次
  Task2003 =2003;//参加转盘5次
  Task2004 =2004;//参加多人混战5次
  Task2005 =2005;//领取广告奖励5次
  Task2006 =2006;//消耗金币数量达到1000

}
//任务
message Base_Task_TaskInfo{
  Base_Ads_AdsTasksInfo AdsTasksInfo =1;//广告任务
  Base_Task_CupTaskInfo CupTaskInfo =2; //奖杯任务
  map<int32,Base_Task_TaskItemInfo> TaskItemList=3;//任务列表信息taskId:

  }
//一个任务
message Base_Task_TaskItemInfo{
    int32 State =1;//0:未完成;1:完成未领取;2:已领取；
    int32 ProgressValue =2;//显示进度值

}

//奖杯任务
message Base_Task_CupTaskInfo{
  map<int32,int32>CupTaskStatus =2;//奖杯任务状态列表 Id::0:未领取;1:已经领取;

}
//=====todo====协议================================================
//更新奖杯任务
message Net_Task_UpdateCupTaskRet{
  Base_Task_CupTaskInfo CupTaskInfo =1;//奖杯任务
}
//更新任务Items
message Net_Task_UpdateTaskRet{
  map<int32,Base_Task_TaskItemInfo> UpdateItemList=1;//需要更新的任务信息列表
}

//领取任务奖励
message Net_Task_ReceiveTaskRewardReq{
  int32 TaskId =1;//任务Id
}
message Net_Task_ReceiveTaskRewardRet{
  int32 Ret=1;//0:成功;1:参数错误;2:已经领取;3:条件不满足;
}



//获取奖杯任务列表
message Net_Task_GetCupTaskReq{
}
message Net_Task_GetCupTaskRet{
    map<int32,int32>CupTaskStatus =1; //Id::0:未领取;1:已经领取;
}

//领取奖杯任务奖励
message Net_Task_ReceiveCupTaskAwardReq{
  int32 TaskId =1;//CupTask 任务Id

}
//返回 领取奖杯任务奖励
message Net_Task_ReceiveCupTaskAwardRet{
      int32 Ret=1;//0:成功;1:参数错误;2:已经领取;3:条件不满足;
}