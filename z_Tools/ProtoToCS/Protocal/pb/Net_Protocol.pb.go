// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_Protocol.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息模块
type CmdModule int32

const (
	CmdModule_IdleModule CmdModule = 0
	CmdModule_Login      CmdModule = 1001 //登录模块
	CmdModule_Lobby      CmdModule = 1002 //大厅模块
	CmdModule_World      CmdModule = 1003 //游戏场景世界
	CmdModule_Chat       CmdModule = 1004 //
	CmdModule_Activity   CmdModule = 1006 //活动
	CmdModule_Task       CmdModule = 1007 //任务
	CmdModule_Theme      CmdModule = 1008 //
	CmdModule_Room       CmdModule = 1009 //
)

// Enum value maps for CmdModule.
var (
	CmdModule_name = map[int32]string{
		0:    "IdleModule",
		1001: "Login",
		1002: "Lobby",
		1003: "World",
		1004: "Chat",
		1006: "Activity",
		1007: "Task",
		1008: "Theme",
		1009: "Room",
	}
	CmdModule_value = map[string]int32{
		"IdleModule": 0,
		"Login":      1001,
		"Lobby":      1002,
		"World":      1003,
		"Chat":       1004,
		"Activity":   1006,
		"Task":       1007,
		"Theme":      1008,
		"Room":       1009,
	}
)

func (x CmdModule) Enum() *CmdModule {
	p := new(CmdModule)
	*p = x
	return p
}

func (x CmdModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CmdModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Protocol_proto_enumTypes[0].Descriptor()
}

func (CmdModule) Type() protoreflect.EnumType {
	return &file_Net_Protocol_proto_enumTypes[0]
}

func (x CmdModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CmdModule.Descriptor instead.
func (CmdModule) EnumDescriptor() ([]byte, []int) {
	return file_Net_Protocol_proto_rawDescGZIP(), []int{0}
}

// //消息头id
// added by yh @ 2023/08/25 14:09
// 注意:协议规则 协议号/1000 为模块id 取余为消息号  纠结了很久 最终还是坚持
// Cmd.Login_Login //本是Cmd.Login_Login 这样的 代表登录模块的-登录消息 无赖C# PB不支持枚举下划线
// Net_Login_LoginReq //客户端请求格式  通信_模块_消息名字Req
// Net_Login_LoginRet //服务器返回格式  通信_模块_消息名字Ret
//
// //C#客户端 把To看做下划线使用 Cmd.Login_Login --> Cmd.Login_Login
// GameNet.Instance.RegisterProtocolHandler(Cmd.Login_Login,ProtocolLoginHandler);
// private void ProtocolLoginHandler(MsgPendingData msg_data){
// Net_Login_LoginRet data = Net_Login_LoginRet.Parser.ParseFrom(msg_data.data_bytes);
// }
// ProtocolVersion =1;//协议版本号
type Cmd int32

const (
	Cmd_CmdIdle Cmd = 0 //空置占位没用
	Cmd_Error   Cmd = 1001001
	// login 1001  msgid /1000
	Cmd_Login_Login                 Cmd = 1001002 //登录
	Cmd_Login_Logout                Cmd = 1001022 //登出
	Cmd_Login_CloseServer           Cmd = 1001023 //服务器关服中...
	Cmd_Login_KeepAlive             Cmd = 1001003 //heartbeat 心跳包
	Cmd_Login_Reconnect             Cmd = 1001004 //断线重新连接
	Cmd_Login_FacebookConnect       Cmd = 1001005
	Cmd_Login_FacebookLogout        Cmd = 1001006
	Cmd_Login_FacebookSetUserInfo   Cmd = 1001007 //Facebook设置用户信息
	Cmd_Login_CollectFacebookReward Cmd = 1001008 //fb登录奖励
	Cmd_Login_AppleLogin            Cmd = 1001009
	Cmd_Login_AppleLogout           Cmd = 1001010
	Cmd_Login_MultiUserLogin        Cmd = 1001011 //多用户登录
	// ----Player----1002---------------------------
	Cmd_Player_PlayerInfo            Cmd = 1002001 //有玩家信息更新
	Cmd_Player_UpdateMoneyInfo       Cmd = 1004002 //玩家钱包更新
	Cmd_Player_PlayerUpdatesInfo     Cmd = 1002003 //有玩家信息更新
	Cmd_Player_ChangeName            Cmd = 1002004 //更换名字
	Cmd_Lobby_AuthorizationLogin     Cmd = 1003001 //授权登录
	Cmd_Lobby_AuthorizationEnterGame Cmd = 1003002 //授权进入游戏
	Cmd_Lobby_LuckyWheel             Cmd = 1003003 //幸运大转盘
	// 进入主题
	// Lobby_EnterTheme =1002002;
	// Lobby_OutOfTheme =1002003;
	// Lobby_ThemeMap =1002004;
	// 主题商店
	Cmd_Lobby_ThemeStore Cmd = 1003005
	Cmd_Lobby_MoneyBank  Cmd = 1003006
	Cmd_Lobby_VipNewRule Cmd = 1003007 //VIP规则
	Cmd_Lobby_RateUs     Cmd = 1003008 //评价我们
	Cmd_Lobby_GetRanking Cmd = 1003009 //排行榜
	// 进入小游戏
	Cmd_Lobby_EnterStampGame    Cmd = 1003010
	Cmd_Lobby_CollectLoginBonus Cmd = 1003011 //收集登录奖励
	Cmd_Lobby_ReissueLoginBonus Cmd = 1003012 //补签登录奖励
	Cmd_Lobby_GetDailyBonus     Cmd = 1003015 //获取每日奖励
	Cmd_Lobby_CollectDailyBonus Cmd = 1003016 //收集每日奖励
	// ----Player->Backpack--背包--1004--------------------------
	Cmd_Backpack_GetBackpackInfo Cmd = 1004001 //获取玩家背包列表
	Cmd_Backpack_BackpackUpdate  Cmd = 1004003 //背包更新
	Cmd_Backpack_UseItems        Cmd = 1004004 //点击背包道具使用
	Cmd_Backpack_OpenCell        Cmd = 1004005 //开启格子
	// -------玩家活动-----1006---------------------------------------------------------
	Cmd_Activity_UpdateActivity                   Cmd = 1006001 //更新活动
	Cmd_Activity_ReceiveFireDragonTreasureRewards Cmd = 1006002 //领取火龙宝藏奖励
	Cmd_Activity_UpdateAdsUserType                Cmd = 1006003 //更新广告用户类型 (废弃)
	// -------任务------------------------------------------------------------------
	Cmd_Task_UpdateTask          Cmd = 1007001 //任务有变化主动推送任务更新内容信息
	Cmd_Task_UpdateCupTask       Cmd = 1007002 //更新奖杯任务
	Cmd_Task_GetCupTask          Cmd = 1007003 //领取奖杯任务奖励
	Cmd_Task_ReceiveCupTaskAward Cmd = 1007004 //领取奖杯任务奖励
	Cmd_Task_ReceiveTaskReward   Cmd = 1007005 //领取任务奖励
	// -------商店--------------------------------------------------------------
	Cmd_Shop_GetShopInfo Cmd = 1008001 //商店信息
	Cmd_Shop_BuyItem     Cmd = 1008002 //购买商品
	Cmd_Shop_Pay         Cmd = 1008003 //支付
	// ------收件箱-----------------------------------------------------
	Cmd_Inbox_UpdateItemsInfo   Cmd = 1009001 //主动更新
	Cmd_Inbox_SendEmail         Cmd = 1009002 //发送邮件
	Cmd_Inbox_DeleteEmail       Cmd = 1009003 //删除邮件
	Cmd_Inbox_ClaimRewardGifts  Cmd = 1009004 //收件箱->领取奖励礼物
	Cmd_Lobby_GetFcmRewards     Cmd = 1009005
	Cmd_Lobby_CollectFcmRewards Cmd = 1009006
	Cmd_Collect_WelcomeBack     Cmd = 1009007 //收集系统
	// ------新手引导--------------------------------------------------------
	Cmd_Guide_MarkComplete Cmd = 1010001 //当前任务引导完成
	// Guide_NextStep =1010002;
	// ------广告--------------------------------------------------------
	Cmd_Ads_GetAdsTasks      Cmd = 1011001 //获取广告任务
	Cmd_Ads_CollectAdsReward Cmd = 1011002 //收集广告奖励
	// ---------todo-三消主题场景消息--------------------------------------------------------
	Cmd_Match3_GetHeroList              Cmd = 1005004 //暂时废弃
	Cmd_Match3_UpdateHeroCard           Cmd = 1005091 //更新卡牌
	Cmd_Match3_HeroCardUnlock           Cmd = 1005092 //解锁英雄
	Cmd_Match3_HeroCardBuyUseNum        Cmd = 1005093 //购买使用次数
	Cmd_Match3_BuyTalentSkill           Cmd = 1005094 //购买天赋技能
	Cmd_Match3_StartMatchingRoom        Cmd = 1005001 //开始匹配中...
	Cmd_Match3_CancelMatching           Cmd = 1005002 //取消匹配中...
	Cmd_Match3_StartMatchingRoomSuccess Cmd = 1005003 //匹配成功...
	Cmd_Match3_EnterRoom                Cmd = 1005005 //进入房间-暂时废弃没用
	Cmd_Match3_GetSceneInformation      Cmd = 1005006 //获取场景信息
	Cmd_Match3_OtherRoleEnterRoom       Cmd = 1005007 //其它玩家进入房间
	Cmd_Match3_ExitRoom                 Cmd = 1005008 //退出房间
	Cmd_Match3_OtherRoleExitRoom        Cmd = 1005009 //其它玩家退出
	// Match3_Start =1005010;//开始
	// Match3_Prepare =1005007;//准备
	// Match3_PrepareCancel =1005006;//准备取消
	// Match3_Countdown =1005009;//倒计时10秒
	Cmd_Match3_NextMove                        Cmd = 1005011 //下一步行动
	Cmd_Match3_WaitOtherPlayerOfflineCountdown Cmd = 1005012 //等待其它玩家离线倒计时
	Cmd_Match3_RoleDeathJieSuan                Cmd = 1005017 //角色死亡结算
	Cmd_Match3_GameOver                        Cmd = 1005013 //游戏结束
	Cmd_Match3_HeroAttack                      Cmd = 1005014 //英雄攻击
	Cmd_Match3_ReleaseSkill                    Cmd = 1005015 //释放技能栏技能
	Cmd_Match3_Interfere                       Cmd = 1005016 //释放技能干扰其它玩家效果
	Cmd_Match3_NextRoundOperation              Cmd = 1005018 //操作回合
	// -------通行证功能模块------------------------------------------------------------------
	Cmd_PassCheck_UpdateItemsInfo Cmd = 1012001 //主动更新
	Cmd_PassCheck_ClaimReward     Cmd = 1012002 //领取奖励
	Cmd_PassCheck_Buy             Cmd = 1012003 //购买
	// ------Slots--------------------------------------------------------
	Cmd_Slots_Spin Cmd = 1021001 //Spin
)

// Enum value maps for Cmd.
var (
	Cmd_name = map[int32]string{
		0:       "CmdIdle",
		1001001: "Error",
		1001002: "Login_Login",
		1001022: "Login_Logout",
		1001023: "Login_CloseServer",
		1001003: "Login_KeepAlive",
		1001004: "Login_Reconnect",
		1001005: "Login_FacebookConnect",
		1001006: "Login_FacebookLogout",
		1001007: "Login_FacebookSetUserInfo",
		1001008: "Login_CollectFacebookReward",
		1001009: "Login_AppleLogin",
		1001010: "Login_AppleLogout",
		1001011: "Login_MultiUserLogin",
		1002001: "Player_PlayerInfo",
		1004002: "Player_UpdateMoneyInfo",
		1002003: "Player_PlayerUpdatesInfo",
		1002004: "Player_ChangeName",
		1003001: "Lobby_AuthorizationLogin",
		1003002: "Lobby_AuthorizationEnterGame",
		1003003: "Lobby_LuckyWheel",
		1003005: "Lobby_ThemeStore",
		1003006: "Lobby_MoneyBank",
		1003007: "Lobby_VipNewRule",
		1003008: "Lobby_RateUs",
		1003009: "Lobby_GetRanking",
		1003010: "Lobby_EnterStampGame",
		1003011: "Lobby_CollectLoginBonus",
		1003012: "Lobby_ReissueLoginBonus",
		1003015: "Lobby_GetDailyBonus",
		1003016: "Lobby_CollectDailyBonus",
		1004001: "Backpack_GetBackpackInfo",
		1004003: "Backpack_BackpackUpdate",
		1004004: "Backpack_UseItems",
		1004005: "Backpack_OpenCell",
		1006001: "Activity_UpdateActivity",
		1006002: "Activity_ReceiveFireDragonTreasureRewards",
		1006003: "Activity_UpdateAdsUserType",
		1007001: "Task_UpdateTask",
		1007002: "Task_UpdateCupTask",
		1007003: "Task_GetCupTask",
		1007004: "Task_ReceiveCupTaskAward",
		1007005: "Task_ReceiveTaskReward",
		1008001: "Shop_GetShopInfo",
		1008002: "Shop_BuyItem",
		1008003: "Shop_Pay",
		1009001: "Inbox_UpdateItemsInfo",
		1009002: "Inbox_SendEmail",
		1009003: "Inbox_DeleteEmail",
		1009004: "Inbox_ClaimRewardGifts",
		1009005: "Lobby_GetFcmRewards",
		1009006: "Lobby_CollectFcmRewards",
		1009007: "Collect_WelcomeBack",
		1010001: "Guide_MarkComplete",
		1011001: "Ads_GetAdsTasks",
		1011002: "Ads_CollectAdsReward",
		1005004: "Match3_GetHeroList",
		1005091: "Match3_UpdateHeroCard",
		1005092: "Match3_HeroCardUnlock",
		1005093: "Match3_HeroCardBuyUseNum",
		1005094: "Match3_BuyTalentSkill",
		1005001: "Match3_StartMatchingRoom",
		1005002: "Match3_CancelMatching",
		1005003: "Match3_StartMatchingRoomSuccess",
		1005005: "Match3_EnterRoom",
		1005006: "Match3_GetSceneInformation",
		1005007: "Match3_OtherRoleEnterRoom",
		1005008: "Match3_ExitRoom",
		1005009: "Match3_OtherRoleExitRoom",
		1005011: "Match3_NextMove",
		1005012: "Match3_WaitOtherPlayerOfflineCountdown",
		1005017: "Match3_RoleDeathJieSuan",
		1005013: "Match3_GameOver",
		1005014: "Match3_HeroAttack",
		1005015: "Match3_ReleaseSkill",
		1005016: "Match3_Interfere",
		1005018: "Match3_NextRoundOperation",
		1012001: "PassCheck_UpdateItemsInfo",
		1012002: "PassCheck_ClaimReward",
		1012003: "PassCheck_Buy",
		1021001: "Slots_Spin",
	}
	Cmd_value = map[string]int32{
		"CmdIdle":                                   0,
		"Error":                                     1001001,
		"Login_Login":                               1001002,
		"Login_Logout":                              1001022,
		"Login_CloseServer":                         1001023,
		"Login_KeepAlive":                           1001003,
		"Login_Reconnect":                           1001004,
		"Login_FacebookConnect":                     1001005,
		"Login_FacebookLogout":                      1001006,
		"Login_FacebookSetUserInfo":                 1001007,
		"Login_CollectFacebookReward":               1001008,
		"Login_AppleLogin":                          1001009,
		"Login_AppleLogout":                         1001010,
		"Login_MultiUserLogin":                      1001011,
		"Player_PlayerInfo":                         1002001,
		"Player_UpdateMoneyInfo":                    1004002,
		"Player_PlayerUpdatesInfo":                  1002003,
		"Player_ChangeName":                         1002004,
		"Lobby_AuthorizationLogin":                  1003001,
		"Lobby_AuthorizationEnterGame":              1003002,
		"Lobby_LuckyWheel":                          1003003,
		"Lobby_ThemeStore":                          1003005,
		"Lobby_MoneyBank":                           1003006,
		"Lobby_VipNewRule":                          1003007,
		"Lobby_RateUs":                              1003008,
		"Lobby_GetRanking":                          1003009,
		"Lobby_EnterStampGame":                      1003010,
		"Lobby_CollectLoginBonus":                   1003011,
		"Lobby_ReissueLoginBonus":                   1003012,
		"Lobby_GetDailyBonus":                       1003015,
		"Lobby_CollectDailyBonus":                   1003016,
		"Backpack_GetBackpackInfo":                  1004001,
		"Backpack_BackpackUpdate":                   1004003,
		"Backpack_UseItems":                         1004004,
		"Backpack_OpenCell":                         1004005,
		"Activity_UpdateActivity":                   1006001,
		"Activity_ReceiveFireDragonTreasureRewards": 1006002,
		"Activity_UpdateAdsUserType":                1006003,
		"Task_UpdateTask":                           1007001,
		"Task_UpdateCupTask":                        1007002,
		"Task_GetCupTask":                           1007003,
		"Task_ReceiveCupTaskAward":                  1007004,
		"Task_ReceiveTaskReward":                    1007005,
		"Shop_GetShopInfo":                          1008001,
		"Shop_BuyItem":                              1008002,
		"Shop_Pay":                                  1008003,
		"Inbox_UpdateItemsInfo":                     1009001,
		"Inbox_SendEmail":                           1009002,
		"Inbox_DeleteEmail":                         1009003,
		"Inbox_ClaimRewardGifts":                    1009004,
		"Lobby_GetFcmRewards":                       1009005,
		"Lobby_CollectFcmRewards":                   1009006,
		"Collect_WelcomeBack":                       1009007,
		"Guide_MarkComplete":                        1010001,
		"Ads_GetAdsTasks":                           1011001,
		"Ads_CollectAdsReward":                      1011002,
		"Match3_GetHeroList":                        1005004,
		"Match3_UpdateHeroCard":                     1005091,
		"Match3_HeroCardUnlock":                     1005092,
		"Match3_HeroCardBuyUseNum":                  1005093,
		"Match3_BuyTalentSkill":                     1005094,
		"Match3_StartMatchingRoom":                  1005001,
		"Match3_CancelMatching":                     1005002,
		"Match3_StartMatchingRoomSuccess":           1005003,
		"Match3_EnterRoom":                          1005005,
		"Match3_GetSceneInformation":                1005006,
		"Match3_OtherRoleEnterRoom":                 1005007,
		"Match3_ExitRoom":                           1005008,
		"Match3_OtherRoleExitRoom":                  1005009,
		"Match3_NextMove":                           1005011,
		"Match3_WaitOtherPlayerOfflineCountdown":    1005012,
		"Match3_RoleDeathJieSuan":                   1005017,
		"Match3_GameOver":                           1005013,
		"Match3_HeroAttack":                         1005014,
		"Match3_ReleaseSkill":                       1005015,
		"Match3_Interfere":                          1005016,
		"Match3_NextRoundOperation":                 1005018,
		"PassCheck_UpdateItemsInfo":                 1012001,
		"PassCheck_ClaimReward":                     1012002,
		"PassCheck_Buy":                             1012003,
		"Slots_Spin":                                1021001,
	}
)

func (x Cmd) Enum() *Cmd {
	p := new(Cmd)
	*p = x
	return p
}

func (x Cmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cmd) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Protocol_proto_enumTypes[1].Descriptor()
}

func (Cmd) Type() protoreflect.EnumType {
	return &file_Net_Protocol_proto_enumTypes[1]
}

func (x Cmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cmd.Descriptor instead.
func (Cmd) EnumDescriptor() ([]byte, []int) {
	return file_Net_Protocol_proto_rawDescGZIP(), []int{1}
}

var File_Net_Protocol_proto protoreflect.FileDescriptor

var file_Net_Protocol_proto_rawDesc = []byte{
	0x0a, 0x12, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x50, 0x62, 0x2a, 0x7b, 0x0a, 0x09, 0x43, 0x6d, 0x64, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x64, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xe9,
	0x07, 0x12, 0x0a, 0x0a, 0x05, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10, 0xea, 0x07, 0x12, 0x0a, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x10, 0xeb, 0x07, 0x12, 0x09, 0x0a, 0x04, 0x43, 0x68, 0x61,
	0x74, 0x10, 0xec, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x10, 0xee, 0x07, 0x12, 0x09, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x10, 0xef, 0x07, 0x12, 0x0a,
	0x0a, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x10, 0xf0, 0x07, 0x12, 0x09, 0x0a, 0x04, 0x52, 0x6f,
	0x6f, 0x6d, 0x10, 0xf1, 0x07, 0x2a, 0xb0, 0x11, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0xa9, 0x8c, 0x3d, 0x12, 0x11, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xaa, 0x8c, 0x3d, 0x12, 0x12, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x10, 0xbe, 0x8c, 0x3d, 0x12, 0x17,
	0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x10, 0xbf, 0x8c, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x10, 0xab, 0x8c, 0x3d, 0x12, 0x15,
	0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x10, 0xac, 0x8c, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0xad,
	0x8c, 0x3d, 0x12, 0x1a, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x10, 0xae, 0x8c, 0x3d, 0x12, 0x1f,
	0x0a, 0x19, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xaf, 0x8c, 0x3d, 0x12,
	0x21, 0x0a, 0x1b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0xb0,
	0x8c, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x41, 0x70, 0x70, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xb1, 0x8c, 0x3d, 0x12, 0x17, 0x0a, 0x11, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x10,
	0xb2, 0x8c, 0x3d, 0x12, 0x1a, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xb3, 0x8c, 0x3d, 0x12,
	0x17, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x91, 0x94, 0x3d, 0x12, 0x1c, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0xe2, 0xa3, 0x3d, 0x12, 0x1e, 0x0a, 0x18, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0x93, 0x94, 0x3d, 0x12, 0x17, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x94, 0x94, 0x3d, 0x12,
	0x1e, 0x0a, 0x18, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xf9, 0x9b, 0x3d, 0x12,
	0x22, 0x0a, 0x1c, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x10,
	0xfa, 0x9b, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x4c, 0x75, 0x63,
	0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10, 0xfb, 0x9b, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x5f, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x10,
	0xfd, 0x9b, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x10, 0xfe, 0x9b, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x5f, 0x56, 0x69, 0x70, 0x4e, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x10, 0xff,
	0x9b, 0x3d, 0x12, 0x12, 0x0a, 0x0c, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x52, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x10, 0x80, 0x9c, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x81, 0x9c, 0x3d, 0x12, 0x1a,
	0x0a, 0x14, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x82, 0x9c, 0x3d, 0x12, 0x1d, 0x0a, 0x17, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x10, 0x83, 0x9c, 0x3d, 0x12, 0x1d, 0x0a, 0x17, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x10, 0x84, 0x9c, 0x3d, 0x12, 0x19, 0x0a, 0x13, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x10,
	0x87, 0x9c, 0x3d, 0x12, 0x1d, 0x0a, 0x17, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x10, 0x88,
	0x9c, 0x3d, 0x12, 0x1e, 0x0a, 0x18, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xe1,
	0xa3, 0x3d, 0x12, 0x1d, 0x0a, 0x17, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x42,
	0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xe3, 0xa3,
	0x3d, 0x12, 0x17, 0x0a, 0x11, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x55, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0xe4, 0xa3, 0x3d, 0x12, 0x17, 0x0a, 0x11, 0x42, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x65, 0x6c, 0x6c, 0x10,
	0xe5, 0xa3, 0x3d, 0x12, 0x1d, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0xb1,
	0xb3, 0x3d, 0x12, 0x2f, 0x0a, 0x29, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x72, 0x65, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10,
	0xb2, 0xb3, 0x3d, 0x12, 0x20, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x73, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x10, 0xb3, 0xb3, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x99, 0xbb, 0x3d, 0x12, 0x18, 0x0a, 0x12,
	0x54, 0x61, 0x73, 0x6b, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x10, 0x9a, 0xbb, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x9b, 0xbb, 0x3d, 0x12, 0x1e, 0x0a,
	0x18, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x10, 0x9c, 0xbb, 0x3d, 0x12, 0x1c, 0x0a,
	0x16, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x9d, 0xbb, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x53,
	0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x10,
	0x81, 0xc3, 0x3d, 0x12, 0x12, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x5f, 0x42, 0x75, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x10, 0x82, 0xc3, 0x3d, 0x12, 0x0e, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x5f,
	0x50, 0x61, 0x79, 0x10, 0x83, 0xc3, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0xe9, 0xca, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0xea, 0xca, 0x3d, 0x12, 0x17, 0x0a, 0x11, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x10, 0xeb, 0xca, 0x3d, 0x12, 0x1c, 0x0a, 0x16, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x69, 0x66, 0x74, 0x73, 0x10, 0xec,
	0xca, 0x3d, 0x12, 0x19, 0x0a, 0x13, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x46,
	0x63, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0xed, 0xca, 0x3d, 0x12, 0x1d, 0x0a,
	0x17, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x63,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0xee, 0xca, 0x3d, 0x12, 0x19, 0x0a, 0x13,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x10, 0xef, 0xca, 0x3d, 0x12, 0x18, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x5f, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xd1, 0xd2,
	0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x41, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x73, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x10, 0xb9, 0xda, 0x3d, 0x12, 0x1a, 0x0a, 0x14, 0x41, 0x64, 0x73, 0x5f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x10, 0xba, 0xda, 0x3d, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xcc, 0xab, 0x3d, 0x12, 0x1b,
	0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x10, 0xa3, 0xac, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x10, 0xa4, 0xac, 0x3d, 0x12, 0x1e, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x33, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x79, 0x55, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x10, 0xa5, 0xac, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x33, 0x5f, 0x42, 0x75, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x10, 0xa6, 0xac, 0x3d, 0x12, 0x1e, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f,
	0x6d, 0x10, 0xc9, 0xab, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x10, 0xca,
	0xab, 0x3d, 0x12, 0x25, 0x0a, 0x1f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0xcb, 0xab, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x33, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0xcd, 0xab,
	0x3d, 0x12, 0x20, 0x0a, 0x1a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xce, 0xab, 0x3d, 0x12, 0x1f, 0x0a, 0x19, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x10, 0xcf, 0xab, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0xd0, 0xab, 0x3d, 0x12, 0x1e, 0x0a, 0x18, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0xd1, 0xab, 0x3d, 0x12, 0x15, 0x0a, 0x0f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0xd3,
	0xab, 0x3d, 0x12, 0x2c, 0x0a, 0x26, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x57, 0x61, 0x69,
	0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0xd4, 0xab, 0x3d,
	0x12, 0x1d, 0x0a, 0x17, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x4a, 0x69, 0x65, 0x53, 0x75, 0x61, 0x6e, 0x10, 0xd9, 0xab, 0x3d, 0x12,
	0x15, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76,
	0x65, 0x72, 0x10, 0xd5, 0xab, 0x3d, 0x12, 0x17, 0x0a, 0x11, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33,
	0x5f, 0x48, 0x65, 0x72, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x10, 0xd6, 0xab, 0x3d, 0x12,
	0x19, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x10, 0xd7, 0xab, 0x3d, 0x12, 0x16, 0x0a, 0x10, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x33, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x10, 0xd8,
	0xab, 0x3d, 0x12, 0x1f, 0x0a, 0x19, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x4e, 0x65, 0x78,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xda, 0xab, 0x3d, 0x12, 0x1f, 0x0a, 0x19, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0xa1, 0xe2, 0x3d, 0x12, 0x1b, 0x0a, 0x15, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0xa2, 0xe2,
	0x3d, 0x12, 0x13, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x42,
	0x75, 0x79, 0x10, 0xa3, 0xe2, 0x3d, 0x12, 0x10, 0x0a, 0x0a, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x5f,
	0x53, 0x70, 0x69, 0x6e, 0x10, 0xc9, 0xa8, 0x3e, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Net_Protocol_proto_rawDescOnce sync.Once
	file_Net_Protocol_proto_rawDescData = file_Net_Protocol_proto_rawDesc
)

func file_Net_Protocol_proto_rawDescGZIP() []byte {
	file_Net_Protocol_proto_rawDescOnce.Do(func() {
		file_Net_Protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_Protocol_proto_rawDescData)
	})
	return file_Net_Protocol_proto_rawDescData
}

var file_Net_Protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Net_Protocol_proto_goTypes = []interface{}{
	(CmdModule)(0), // 0: Pb.CmdModule
	(Cmd)(0),       // 1: Pb.Cmd
}
var file_Net_Protocol_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Net_Protocol_proto_init() }
func file_Net_Protocol_proto_init() {
	if File_Net_Protocol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_Protocol_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_Protocol_proto_goTypes,
		DependencyIndexes: file_Net_Protocol_proto_depIdxs,
		EnumInfos:         file_Net_Protocol_proto_enumTypes,
	}.Build()
	File_Net_Protocol_proto = out.File
	file_Net_Protocol_proto_rawDesc = nil
	file_Net_Protocol_proto_goTypes = nil
	file_Net_Protocol_proto_depIdxs = nil
}
