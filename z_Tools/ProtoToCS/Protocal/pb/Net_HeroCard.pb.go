// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_HeroCard.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 一个 英雄卡牌 信息
type Base_HeroCard_AHeroCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //购买英雄Id
	UseNum int32 `protobuf:"varint,2,opt,name=UseNum,proto3" json:"UseNum,omitempty"` //当前使用次数 没有上限 0蛋就不能用
}

func (x *Base_HeroCard_AHeroCard) Reset() {
	*x = Base_HeroCard_AHeroCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_HeroCard_AHeroCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_HeroCard_AHeroCard) ProtoMessage() {}

func (x *Base_HeroCard_AHeroCard) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_HeroCard_AHeroCard.ProtoReflect.Descriptor instead.
func (*Base_HeroCard_AHeroCard) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{0}
}

func (x *Base_HeroCard_AHeroCard) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *Base_HeroCard_AHeroCard) GetUseNum() int32 {
	if x != nil {
		return x.UseNum
	}
	return 0
}

// 玩家 英雄卡牌 信息
type Base_HeroCard_HeroCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroCardList map[int32]*Base_HeroCard_AHeroCard `protobuf:"bytes,1,rep,name=HeroCardList,proto3" json:"HeroCardList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //
}

func (x *Base_HeroCard_HeroCardInfo) Reset() {
	*x = Base_HeroCard_HeroCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_HeroCard_HeroCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_HeroCard_HeroCardInfo) ProtoMessage() {}

func (x *Base_HeroCard_HeroCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_HeroCard_HeroCardInfo.ProtoReflect.Descriptor instead.
func (*Base_HeroCard_HeroCardInfo) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{1}
}

func (x *Base_HeroCard_HeroCardInfo) GetHeroCardList() map[int32]*Base_HeroCard_AHeroCard {
	if x != nil {
		return x.HeroCardList
	}
	return nil
}

// 更新英雄卡牌信息
type Net_Match3_UpdateHeroCardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroCardInfo *Base_HeroCard_HeroCardInfo `protobuf:"bytes,1,opt,name=HeroCardInfo,proto3" json:"HeroCardInfo,omitempty"` //卡牌信息
}

func (x *Net_Match3_UpdateHeroCardRet) Reset() {
	*x = Net_Match3_UpdateHeroCardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_UpdateHeroCardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_UpdateHeroCardRet) ProtoMessage() {}

func (x *Net_Match3_UpdateHeroCardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_UpdateHeroCardRet.ProtoReflect.Descriptor instead.
func (*Net_Match3_UpdateHeroCardRet) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{2}
}

func (x *Net_Match3_UpdateHeroCardRet) GetHeroCardInfo() *Base_HeroCard_HeroCardInfo {
	if x != nil {
		return x.HeroCardInfo
	}
	return nil
}

// 获取英雄展示
type Net_Match3_GetHeroListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Match3_GetHeroListReq) Reset() {
	*x = Net_Match3_GetHeroListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_GetHeroListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_GetHeroListReq) ProtoMessage() {}

func (x *Net_Match3_GetHeroListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_GetHeroListReq.ProtoReflect.Descriptor instead.
func (*Net_Match3_GetHeroListReq) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{3}
}

type Net_Match3_GetHeroListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroCardInfo *Base_HeroCard_HeroCardInfo `protobuf:"bytes,1,opt,name=HeroCardInfo,proto3" json:"HeroCardInfo,omitempty"` //英雄信息
}

func (x *Net_Match3_GetHeroListRet) Reset() {
	*x = Net_Match3_GetHeroListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_GetHeroListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_GetHeroListRet) ProtoMessage() {}

func (x *Net_Match3_GetHeroListRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_GetHeroListRet.ProtoReflect.Descriptor instead.
func (*Net_Match3_GetHeroListRet) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{4}
}

func (x *Net_Match3_GetHeroListRet) GetHeroCardInfo() *Base_HeroCard_HeroCardInfo {
	if x != nil {
		return x.HeroCardInfo
	}
	return nil
}

// 解锁英雄
type Net_Match3_HeroCardUnlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //解锁英雄id
}

func (x *Net_Match3_HeroCardUnlockReq) Reset() {
	*x = Net_Match3_HeroCardUnlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_HeroCardUnlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_HeroCardUnlockReq) ProtoMessage() {}

func (x *Net_Match3_HeroCardUnlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_HeroCardUnlockReq.ProtoReflect.Descriptor instead.
func (*Net_Match3_HeroCardUnlockReq) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{5}
}

func (x *Net_Match3_HeroCardUnlockReq) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

type Net_Match3_HeroCardUnlockRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`       //0:解锁成功;1:未知错误;2:已经激活英雄；3:条件未满足;
	HeroId int32 `protobuf:"varint,2,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //解锁英雄id
}

func (x *Net_Match3_HeroCardUnlockRet) Reset() {
	*x = Net_Match3_HeroCardUnlockRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_HeroCardUnlockRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_HeroCardUnlockRet) ProtoMessage() {}

func (x *Net_Match3_HeroCardUnlockRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_HeroCardUnlockRet.ProtoReflect.Descriptor instead.
func (*Net_Match3_HeroCardUnlockRet) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{6}
}

func (x *Net_Match3_HeroCardUnlockRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *Net_Match3_HeroCardUnlockRet) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

// 购买英雄使用次数
type Net_Match3_HeroCardBuyUseNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //英雄Id
}

func (x *Net_Match3_HeroCardBuyUseNumReq) Reset() {
	*x = Net_Match3_HeroCardBuyUseNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_HeroCardBuyUseNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_HeroCardBuyUseNumReq) ProtoMessage() {}

func (x *Net_Match3_HeroCardBuyUseNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_HeroCardBuyUseNumReq.ProtoReflect.Descriptor instead.
func (*Net_Match3_HeroCardBuyUseNumReq) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{7}
}

func (x *Net_Match3_HeroCardBuyUseNumReq) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

type Net_Match3_HeroCardBuyUseNumRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`       //0:成功;1:条件未满足;2:没有这个英雄; 3:未知错误;
	HeroId int32 `protobuf:"varint,2,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //购买英雄Id
	Num    int32 `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`       //购买后当前英雄总次数
}

func (x *Net_Match3_HeroCardBuyUseNumRet) Reset() {
	*x = Net_Match3_HeroCardBuyUseNumRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_HeroCardBuyUseNumRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_HeroCardBuyUseNumRet) ProtoMessage() {}

func (x *Net_Match3_HeroCardBuyUseNumRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_HeroCardBuyUseNumRet.ProtoReflect.Descriptor instead.
func (*Net_Match3_HeroCardBuyUseNumRet) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{8}
}

func (x *Net_Match3_HeroCardBuyUseNumRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *Net_Match3_HeroCardBuyUseNumRet) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *Net_Match3_HeroCardBuyUseNumRet) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 选择英雄
type Net_Match3_SelectHeroCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32 `protobuf:"varint,1,opt,name=HeroId,proto3" json:"HeroId,omitempty"` //英雄Id
}

func (x *Net_Match3_SelectHeroCardReq) Reset() {
	*x = Net_Match3_SelectHeroCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_SelectHeroCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_SelectHeroCardReq) ProtoMessage() {}

func (x *Net_Match3_SelectHeroCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_SelectHeroCardReq.ProtoReflect.Descriptor instead.
func (*Net_Match3_SelectHeroCardReq) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{9}
}

func (x *Net_Match3_SelectHeroCardReq) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

type Net_Match3_SelectHeroCardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Match3_SelectHeroCardRet) Reset() {
	*x = Net_Match3_SelectHeroCardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_HeroCard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Match3_SelectHeroCardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Match3_SelectHeroCardRet) ProtoMessage() {}

func (x *Net_Match3_SelectHeroCardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_HeroCard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Match3_SelectHeroCardRet.ProtoReflect.Descriptor instead.
func (*Net_Match3_SelectHeroCardRet) Descriptor() ([]byte, []int) {
	return file_Net_HeroCard_proto_rawDescGZIP(), []int{10}
}

var File_Net_HeroCard_proto protoreflect.FileDescriptor

var file_Net_HeroCard_proto_rawDesc = []byte{
	0x0a, 0x12, 0x4e, 0x65, 0x74, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x50, 0x62, 0x22, 0x49, 0x0a, 0x17, 0x42, 0x61, 0x73, 0x65,
	0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x41, 0x48, 0x65, 0x72, 0x6f, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0xd0, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x48, 0x65, 0x72,
	0x6f, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x54, 0x0a, 0x0c, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x48, 0x65, 0x72, 0x6f,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x48, 0x65, 0x72, 0x6f,
	0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x5c, 0x0a, 0x11, 0x48, 0x65, 0x72, 0x6f,
	0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x64, 0x5f, 0x41, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x33, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x5f,
	0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x48, 0x65,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x4e, 0x65,
	0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x5f, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x5f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x62, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x48, 0x65,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x48, 0x65, 0x72, 0x6f,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x36, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64,
	0x22, 0x48, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x48,
	0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1f, 0x4e, 0x65,
	0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x75, 0x79, 0x55, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48,
	0x65, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x33, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x79, 0x55,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x4e, 0x75, 0x6d, 0x22, 0x36, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x33, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x4e, 0x65, 0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x33, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Net_HeroCard_proto_rawDescOnce sync.Once
	file_Net_HeroCard_proto_rawDescData = file_Net_HeroCard_proto_rawDesc
)

func file_Net_HeroCard_proto_rawDescGZIP() []byte {
	file_Net_HeroCard_proto_rawDescOnce.Do(func() {
		file_Net_HeroCard_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_HeroCard_proto_rawDescData)
	})
	return file_Net_HeroCard_proto_rawDescData
}

var file_Net_HeroCard_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Net_HeroCard_proto_goTypes = []interface{}{
	(*Base_HeroCard_AHeroCard)(nil),         // 0: Pb.Base_HeroCard_AHeroCard
	(*Base_HeroCard_HeroCardInfo)(nil),      // 1: Pb.Base_HeroCard_HeroCardInfo
	(*Net_Match3_UpdateHeroCardRet)(nil),    // 2: Pb.Net_Match3_UpdateHeroCardRet
	(*Net_Match3_GetHeroListReq)(nil),       // 3: Pb.Net_Match3_GetHeroListReq
	(*Net_Match3_GetHeroListRet)(nil),       // 4: Pb.Net_Match3_GetHeroListRet
	(*Net_Match3_HeroCardUnlockReq)(nil),    // 5: Pb.Net_Match3_HeroCardUnlockReq
	(*Net_Match3_HeroCardUnlockRet)(nil),    // 6: Pb.Net_Match3_HeroCardUnlockRet
	(*Net_Match3_HeroCardBuyUseNumReq)(nil), // 7: Pb.Net_Match3_HeroCardBuyUseNumReq
	(*Net_Match3_HeroCardBuyUseNumRet)(nil), // 8: Pb.Net_Match3_HeroCardBuyUseNumRet
	(*Net_Match3_SelectHeroCardReq)(nil),    // 9: Pb.Net_Match3_SelectHeroCardReq
	(*Net_Match3_SelectHeroCardRet)(nil),    // 10: Pb.Net_Match3_SelectHeroCardRet
	nil,                                     // 11: Pb.Base_HeroCard_HeroCardInfo.HeroCardListEntry
}
var file_Net_HeroCard_proto_depIdxs = []int32{
	11, // 0: Pb.Base_HeroCard_HeroCardInfo.HeroCardList:type_name -> Pb.Base_HeroCard_HeroCardInfo.HeroCardListEntry
	1,  // 1: Pb.Net_Match3_UpdateHeroCardRet.HeroCardInfo:type_name -> Pb.Base_HeroCard_HeroCardInfo
	1,  // 2: Pb.Net_Match3_GetHeroListRet.HeroCardInfo:type_name -> Pb.Base_HeroCard_HeroCardInfo
	0,  // 3: Pb.Base_HeroCard_HeroCardInfo.HeroCardListEntry.value:type_name -> Pb.Base_HeroCard_AHeroCard
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_Net_HeroCard_proto_init() }
func file_Net_HeroCard_proto_init() {
	if File_Net_HeroCard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Net_HeroCard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_HeroCard_AHeroCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_HeroCard_HeroCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_UpdateHeroCardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_GetHeroListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_GetHeroListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_HeroCardUnlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_HeroCardUnlockRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_HeroCardBuyUseNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_HeroCardBuyUseNumRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_SelectHeroCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_HeroCard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Match3_SelectHeroCardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_HeroCard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_HeroCard_proto_goTypes,
		DependencyIndexes: file_Net_HeroCard_proto_depIdxs,
		MessageInfos:      file_Net_HeroCard_proto_msgTypes,
	}.Build()
	File_Net_HeroCard_proto = out.File
	file_Net_HeroCard_proto_rawDesc = nil
	file_Net_HeroCard_proto_goTypes = nil
	file_Net_HeroCard_proto_depIdxs = nil
}
