// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_Task.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务
//
// added by yh @ 2024/01/16 18:14
// 注意:
type ETaskStatus int32

const (
	ETaskStatus_Incomplete ETaskStatus = 0 //未完成
	ETaskStatus_Complete   ETaskStatus = 1 //完成
	ETaskStatus_Got        ETaskStatus = 2 //得到
)

// Enum value maps for ETaskStatus.
var (
	ETaskStatus_name = map[int32]string{
		0: "Incomplete",
		1: "Complete",
		2: "Got",
	}
	ETaskStatus_value = map[string]int32{
		"Incomplete": 0,
		"Complete":   1,
		"Got":        2,
	}
)

func (x ETaskStatus) Enum() *ETaskStatus {
	p := new(ETaskStatus)
	*p = x
	return p
}

func (x ETaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Task_proto_enumTypes[0].Descriptor()
}

func (ETaskStatus) Type() protoreflect.EnumType {
	return &file_Net_Task_proto_enumTypes[0]
}

func (x ETaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ETaskStatus.Descriptor instead.
func (ETaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{0}
}

type ETask int32

const (
	ETask_TaskIdle ETask = 0    //空置占位没用
	ETask_Task1001 ETask = 1001 //登录游戏
	ETask_Task1002 ETask = 1002 //参加火龙宝藏2次
	ETask_Task1003 ETask = 1003 //参加金币房2次
	ETask_Task1004 ETask = 1004 //参加转盘1次
	ETask_Task1005 ETask = 1005 //参加多人混战1次
	ETask_Task1006 ETask = 1006 //领取广告奖励1次
	ETask_Task1007 ETask = 1007 //消耗金币数量达到100
	ETask_Task2001 ETask = 2001 //参加火龙宝藏5次
	ETask_Task2002 ETask = 2002 //参加金币房5次
	ETask_Task2003 ETask = 2003 //参加转盘5次
	ETask_Task2004 ETask = 2004 //参加多人混战5次
	ETask_Task2005 ETask = 2005 //领取广告奖励5次
	ETask_Task2006 ETask = 2006 //消耗金币数量达到1000
)

// Enum value maps for ETask.
var (
	ETask_name = map[int32]string{
		0:    "TaskIdle",
		1001: "Task1001",
		1002: "Task1002",
		1003: "Task1003",
		1004: "Task1004",
		1005: "Task1005",
		1006: "Task1006",
		1007: "Task1007",
		2001: "Task2001",
		2002: "Task2002",
		2003: "Task2003",
		2004: "Task2004",
		2005: "Task2005",
		2006: "Task2006",
	}
	ETask_value = map[string]int32{
		"TaskIdle": 0,
		"Task1001": 1001,
		"Task1002": 1002,
		"Task1003": 1003,
		"Task1004": 1004,
		"Task1005": 1005,
		"Task1006": 1006,
		"Task1007": 1007,
		"Task2001": 2001,
		"Task2002": 2002,
		"Task2003": 2003,
		"Task2004": 2004,
		"Task2005": 2005,
		"Task2006": 2006,
	}
)

func (x ETask) Enum() *ETask {
	p := new(ETask)
	*p = x
	return p
}

func (x ETask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETask) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Task_proto_enumTypes[1].Descriptor()
}

func (ETask) Type() protoreflect.EnumType {
	return &file_Net_Task_proto_enumTypes[1]
}

func (x ETask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ETask.Descriptor instead.
func (ETask) EnumDescriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{1}
}

// 任务
type Base_Task_TaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdsTasksInfo *Base_Ads_AdsTasksInfo            `protobuf:"bytes,1,opt,name=AdsTasksInfo,proto3" json:"AdsTasksInfo,omitempty"`                                                                                          //广告任务
	CupTaskInfo  *Base_Task_CupTaskInfo            `protobuf:"bytes,2,opt,name=CupTaskInfo,proto3" json:"CupTaskInfo,omitempty"`                                                                                            //奖杯任务
	TaskItemList map[int32]*Base_Task_TaskItemInfo `protobuf:"bytes,3,rep,name=TaskItemList,proto3" json:"TaskItemList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //任务列表信息taskId:
}

func (x *Base_Task_TaskInfo) Reset() {
	*x = Base_Task_TaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Task_TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Task_TaskInfo) ProtoMessage() {}

func (x *Base_Task_TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Task_TaskInfo.ProtoReflect.Descriptor instead.
func (*Base_Task_TaskInfo) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{0}
}

func (x *Base_Task_TaskInfo) GetAdsTasksInfo() *Base_Ads_AdsTasksInfo {
	if x != nil {
		return x.AdsTasksInfo
	}
	return nil
}

func (x *Base_Task_TaskInfo) GetCupTaskInfo() *Base_Task_CupTaskInfo {
	if x != nil {
		return x.CupTaskInfo
	}
	return nil
}

func (x *Base_Task_TaskInfo) GetTaskItemList() map[int32]*Base_Task_TaskItemInfo {
	if x != nil {
		return x.TaskItemList
	}
	return nil
}

// 一个任务
type Base_Task_TaskItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`                 //0:未完成;1:完成未领取;2:已领取；
	ProgressValue int32 `protobuf:"varint,2,opt,name=ProgressValue,proto3" json:"ProgressValue,omitempty"` //显示进度值
}

func (x *Base_Task_TaskItemInfo) Reset() {
	*x = Base_Task_TaskItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Task_TaskItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Task_TaskItemInfo) ProtoMessage() {}

func (x *Base_Task_TaskItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Task_TaskItemInfo.ProtoReflect.Descriptor instead.
func (*Base_Task_TaskItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{1}
}

func (x *Base_Task_TaskItemInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Base_Task_TaskItemInfo) GetProgressValue() int32 {
	if x != nil {
		return x.ProgressValue
	}
	return 0
}

// 奖杯任务
type Base_Task_CupTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CupTaskStatus map[int32]int32 `protobuf:"bytes,2,rep,name=CupTaskStatus,proto3" json:"CupTaskStatus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //奖杯任务状态列表 Id::0:未领取;1:已经领取;
}

func (x *Base_Task_CupTaskInfo) Reset() {
	*x = Base_Task_CupTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Task_CupTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Task_CupTaskInfo) ProtoMessage() {}

func (x *Base_Task_CupTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Task_CupTaskInfo.ProtoReflect.Descriptor instead.
func (*Base_Task_CupTaskInfo) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{2}
}

func (x *Base_Task_CupTaskInfo) GetCupTaskStatus() map[int32]int32 {
	if x != nil {
		return x.CupTaskStatus
	}
	return nil
}

// =====todo====协议================================================
// 更新奖杯任务
type Net_Task_UpdateCupTaskRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CupTaskInfo *Base_Task_CupTaskInfo `protobuf:"bytes,1,opt,name=CupTaskInfo,proto3" json:"CupTaskInfo,omitempty"` //奖杯任务
}

func (x *Net_Task_UpdateCupTaskRet) Reset() {
	*x = Net_Task_UpdateCupTaskRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_UpdateCupTaskRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_UpdateCupTaskRet) ProtoMessage() {}

func (x *Net_Task_UpdateCupTaskRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_UpdateCupTaskRet.ProtoReflect.Descriptor instead.
func (*Net_Task_UpdateCupTaskRet) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{3}
}

func (x *Net_Task_UpdateCupTaskRet) GetCupTaskInfo() *Base_Task_CupTaskInfo {
	if x != nil {
		return x.CupTaskInfo
	}
	return nil
}

// 更新任务Items
type Net_Task_UpdateTaskRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateItemList map[int32]*Base_Task_TaskItemInfo `protobuf:"bytes,1,rep,name=UpdateItemList,proto3" json:"UpdateItemList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //需要更新的任务信息列表
}

func (x *Net_Task_UpdateTaskRet) Reset() {
	*x = Net_Task_UpdateTaskRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_UpdateTaskRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_UpdateTaskRet) ProtoMessage() {}

func (x *Net_Task_UpdateTaskRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_UpdateTaskRet.ProtoReflect.Descriptor instead.
func (*Net_Task_UpdateTaskRet) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{4}
}

func (x *Net_Task_UpdateTaskRet) GetUpdateItemList() map[int32]*Base_Task_TaskItemInfo {
	if x != nil {
		return x.UpdateItemList
	}
	return nil
}

// 领取任务奖励
type Net_Task_ReceiveTaskRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //任务Id
}

func (x *Net_Task_ReceiveTaskRewardReq) Reset() {
	*x = Net_Task_ReceiveTaskRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_ReceiveTaskRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_ReceiveTaskRewardReq) ProtoMessage() {}

func (x *Net_Task_ReceiveTaskRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_ReceiveTaskRewardReq.ProtoReflect.Descriptor instead.
func (*Net_Task_ReceiveTaskRewardReq) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{5}
}

func (x *Net_Task_ReceiveTaskRewardReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type Net_Task_ReceiveTaskRewardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功;1:参数错误;2:已经领取;3:条件不满足;
}

func (x *Net_Task_ReceiveTaskRewardRet) Reset() {
	*x = Net_Task_ReceiveTaskRewardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_ReceiveTaskRewardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_ReceiveTaskRewardRet) ProtoMessage() {}

func (x *Net_Task_ReceiveTaskRewardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_ReceiveTaskRewardRet.ProtoReflect.Descriptor instead.
func (*Net_Task_ReceiveTaskRewardRet) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{6}
}

func (x *Net_Task_ReceiveTaskRewardRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// 获取奖杯任务列表
type Net_Task_GetCupTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Task_GetCupTaskReq) Reset() {
	*x = Net_Task_GetCupTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_GetCupTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_GetCupTaskReq) ProtoMessage() {}

func (x *Net_Task_GetCupTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_GetCupTaskReq.ProtoReflect.Descriptor instead.
func (*Net_Task_GetCupTaskReq) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{7}
}

type Net_Task_GetCupTaskRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CupTaskStatus map[int32]int32 `protobuf:"bytes,1,rep,name=CupTaskStatus,proto3" json:"CupTaskStatus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //Id::0:未领取;1:已经领取;
}

func (x *Net_Task_GetCupTaskRet) Reset() {
	*x = Net_Task_GetCupTaskRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_GetCupTaskRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_GetCupTaskRet) ProtoMessage() {}

func (x *Net_Task_GetCupTaskRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_GetCupTaskRet.ProtoReflect.Descriptor instead.
func (*Net_Task_GetCupTaskRet) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{8}
}

func (x *Net_Task_GetCupTaskRet) GetCupTaskStatus() map[int32]int32 {
	if x != nil {
		return x.CupTaskStatus
	}
	return nil
}

// 领取奖杯任务奖励
type Net_Task_ReceiveCupTaskAwardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //CupTask 任务Id
}

func (x *Net_Task_ReceiveCupTaskAwardReq) Reset() {
	*x = Net_Task_ReceiveCupTaskAwardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_ReceiveCupTaskAwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_ReceiveCupTaskAwardReq) ProtoMessage() {}

func (x *Net_Task_ReceiveCupTaskAwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_ReceiveCupTaskAwardReq.ProtoReflect.Descriptor instead.
func (*Net_Task_ReceiveCupTaskAwardReq) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{9}
}

func (x *Net_Task_ReceiveCupTaskAwardReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 返回 领取奖杯任务奖励
type Net_Task_ReceiveCupTaskAwardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功;1:参数错误;2:已经领取;3:条件不满足;
}

func (x *Net_Task_ReceiveCupTaskAwardRet) Reset() {
	*x = Net_Task_ReceiveCupTaskAwardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Task_ReceiveCupTaskAwardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Task_ReceiveCupTaskAwardRet) ProtoMessage() {}

func (x *Net_Task_ReceiveCupTaskAwardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Task_ReceiveCupTaskAwardRet.ProtoReflect.Descriptor instead.
func (*Net_Task_ReceiveCupTaskAwardRet) Descriptor() ([]byte, []int) {
	return file_Net_Task_proto_rawDescGZIP(), []int{10}
}

func (x *Net_Task_ReceiveCupTaskAwardRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

var File_Net_Task_proto protoreflect.FileDescriptor

var file_Net_Task_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x50, 0x62, 0x1a, 0x0d, 0x4e, 0x65, 0x74, 0x5f, 0x41, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73,
	0x6b, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x41, 0x64,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x41, 0x64, 0x73, 0x5f, 0x41,
	0x64, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x41, 0x64, 0x73,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x43, 0x75,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x75, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x50,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x5b, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x62, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x54, 0x0a, 0x16, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x73, 0x65,
	0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x5f, 0x54,
	0x61, 0x73, 0x6b, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x62, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x12, 0x56, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x50, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61,
	0x73, 0x6b, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x5d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x1d, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1d,
	0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x4e, 0x65,
	0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x0d, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x50, 0x62,
	0x2e, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x2e, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x43, 0x75, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x1f, 0x4e,
	0x65, 0x74, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43,
	0x75, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f, 0x54, 0x61,
	0x73, 0x6b, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x75, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x2a, 0x34, 0x0a, 0x0b, 0x45,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x6f, 0x74, 0x10,
	0x02, 0x2a, 0xd8, 0x01, 0x0a, 0x05, 0x45, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x31, 0x30, 0x30, 0x31, 0x10, 0xe9, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b,
	0x31, 0x30, 0x30, 0x32, 0x10, 0xea, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x31,
	0x30, 0x30, 0x33, 0x10, 0xeb, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x31, 0x30,
	0x30, 0x34, 0x10, 0xec, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x31, 0x30, 0x30,
	0x35, 0x10, 0xed, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x31, 0x30, 0x30, 0x36,
	0x10, 0xee, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x31, 0x30, 0x30, 0x37, 0x10,
	0xef, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x31, 0x10, 0xd1,
	0x0f, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x32, 0x10, 0xd2, 0x0f,
	0x12, 0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x33, 0x10, 0xd3, 0x0f, 0x12,
	0x0d, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x34, 0x10, 0xd4, 0x0f, 0x12, 0x0d,
	0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x35, 0x10, 0xd5, 0x0f, 0x12, 0x0d, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x32, 0x30, 0x30, 0x36, 0x10, 0xd6, 0x0f, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Net_Task_proto_rawDescOnce sync.Once
	file_Net_Task_proto_rawDescData = file_Net_Task_proto_rawDesc
)

func file_Net_Task_proto_rawDescGZIP() []byte {
	file_Net_Task_proto_rawDescOnce.Do(func() {
		file_Net_Task_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_Task_proto_rawDescData)
	})
	return file_Net_Task_proto_rawDescData
}

var file_Net_Task_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Net_Task_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_Net_Task_proto_goTypes = []interface{}{
	(ETaskStatus)(0),                        // 0: Pb.ETaskStatus
	(ETask)(0),                              // 1: Pb.ETask
	(*Base_Task_TaskInfo)(nil),              // 2: Pb.Base_Task_TaskInfo
	(*Base_Task_TaskItemInfo)(nil),          // 3: Pb.Base_Task_TaskItemInfo
	(*Base_Task_CupTaskInfo)(nil),           // 4: Pb.Base_Task_CupTaskInfo
	(*Net_Task_UpdateCupTaskRet)(nil),       // 5: Pb.Net_Task_UpdateCupTaskRet
	(*Net_Task_UpdateTaskRet)(nil),          // 6: Pb.Net_Task_UpdateTaskRet
	(*Net_Task_ReceiveTaskRewardReq)(nil),   // 7: Pb.Net_Task_ReceiveTaskRewardReq
	(*Net_Task_ReceiveTaskRewardRet)(nil),   // 8: Pb.Net_Task_ReceiveTaskRewardRet
	(*Net_Task_GetCupTaskReq)(nil),          // 9: Pb.Net_Task_GetCupTaskReq
	(*Net_Task_GetCupTaskRet)(nil),          // 10: Pb.Net_Task_GetCupTaskRet
	(*Net_Task_ReceiveCupTaskAwardReq)(nil), // 11: Pb.Net_Task_ReceiveCupTaskAwardReq
	(*Net_Task_ReceiveCupTaskAwardRet)(nil), // 12: Pb.Net_Task_ReceiveCupTaskAwardRet
	nil,                                     // 13: Pb.Base_Task_TaskInfo.TaskItemListEntry
	nil,                                     // 14: Pb.Base_Task_CupTaskInfo.CupTaskStatusEntry
	nil,                                     // 15: Pb.Net_Task_UpdateTaskRet.UpdateItemListEntry
	nil,                                     // 16: Pb.Net_Task_GetCupTaskRet.CupTaskStatusEntry
	(*Base_Ads_AdsTasksInfo)(nil),           // 17: Pb.Base_Ads_AdsTasksInfo
}
var file_Net_Task_proto_depIdxs = []int32{
	17, // 0: Pb.Base_Task_TaskInfo.AdsTasksInfo:type_name -> Pb.Base_Ads_AdsTasksInfo
	4,  // 1: Pb.Base_Task_TaskInfo.CupTaskInfo:type_name -> Pb.Base_Task_CupTaskInfo
	13, // 2: Pb.Base_Task_TaskInfo.TaskItemList:type_name -> Pb.Base_Task_TaskInfo.TaskItemListEntry
	14, // 3: Pb.Base_Task_CupTaskInfo.CupTaskStatus:type_name -> Pb.Base_Task_CupTaskInfo.CupTaskStatusEntry
	4,  // 4: Pb.Net_Task_UpdateCupTaskRet.CupTaskInfo:type_name -> Pb.Base_Task_CupTaskInfo
	15, // 5: Pb.Net_Task_UpdateTaskRet.UpdateItemList:type_name -> Pb.Net_Task_UpdateTaskRet.UpdateItemListEntry
	16, // 6: Pb.Net_Task_GetCupTaskRet.CupTaskStatus:type_name -> Pb.Net_Task_GetCupTaskRet.CupTaskStatusEntry
	3,  // 7: Pb.Base_Task_TaskInfo.TaskItemListEntry.value:type_name -> Pb.Base_Task_TaskItemInfo
	3,  // 8: Pb.Net_Task_UpdateTaskRet.UpdateItemListEntry.value:type_name -> Pb.Base_Task_TaskItemInfo
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_Net_Task_proto_init() }
func file_Net_Task_proto_init() {
	if File_Net_Task_proto != nil {
		return
	}
	file_Net_Ads_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Net_Task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Task_TaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Task_TaskItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Task_CupTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_UpdateCupTaskRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_UpdateTaskRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_ReceiveTaskRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_ReceiveTaskRewardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_GetCupTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_GetCupTaskRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_ReceiveCupTaskAwardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Task_ReceiveCupTaskAwardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_Task_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_Task_proto_goTypes,
		DependencyIndexes: file_Net_Task_proto_depIdxs,
		EnumInfos:         file_Net_Task_proto_enumTypes,
		MessageInfos:      file_Net_Task_proto_msgTypes,
	}.Build()
	File_Net_Task_proto = out.File
	file_Net_Task_proto_rawDesc = nil
	file_Net_Task_proto_goTypes = nil
	file_Net_Task_proto_depIdxs = nil
}
