// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_PassCheck.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通行证系统信息
type Base_PassCheck_PassCheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage     int32 `protobuf:"varint,1,opt,name=Stage,proto3" json:"Stage,omitempty"`         //赛级等级
	StartTime int64 `protobuf:"varint,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //开始时间
	EndTime   int64 `protobuf:"varint,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //结束时间
	// int32 Level = 5;//通行证等级
	Value             int32                                       `protobuf:"varint,6,opt,name=Value,proto3" json:"Value,omitempty"`                                                                                                                 //通行证积分值
	IsUnlockAdvanced  int32                                       `protobuf:"varint,7,opt,name=IsUnlockAdvanced,proto3" json:"IsUnlockAdvanced,omitempty"`                                                                                           //是否解锁高级 0:未解锁;1:解锁;
	PassCheckItemList map[int32]*Base_PassCheck_PassCheckItemInfo `protobuf:"bytes,8,rep,name=PassCheckItemList,proto3" json:"PassCheckItemList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //列表信息taskId:
}

func (x *Base_PassCheck_PassCheckInfo) Reset() {
	*x = Base_PassCheck_PassCheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_PassCheck_PassCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_PassCheck_PassCheckInfo) ProtoMessage() {}

func (x *Base_PassCheck_PassCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_PassCheck_PassCheckInfo.ProtoReflect.Descriptor instead.
func (*Base_PassCheck_PassCheckInfo) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{0}
}

func (x *Base_PassCheck_PassCheckInfo) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetIsUnlockAdvanced() int32 {
	if x != nil {
		return x.IsUnlockAdvanced
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetPassCheckItemList() map[int32]*Base_PassCheck_PassCheckItemInfo {
	if x != nil {
		return x.PassCheckItemList
	}
	return nil
}

type Base_PassCheck_PassCheckItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NormalState   int32 `protobuf:"varint,1,opt,name=NormalState,proto3" json:"NormalState,omitempty"`     //普通:: 0:未领取;1:已领取;
	AdvancedState int32 `protobuf:"varint,2,opt,name=AdvancedState,proto3" json:"AdvancedState,omitempty"` //高级:: 0:未领取;1:已领取;
}

func (x *Base_PassCheck_PassCheckItemInfo) Reset() {
	*x = Base_PassCheck_PassCheckItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_PassCheck_PassCheckItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_PassCheck_PassCheckItemInfo) ProtoMessage() {}

func (x *Base_PassCheck_PassCheckItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_PassCheck_PassCheckItemInfo.ProtoReflect.Descriptor instead.
func (*Base_PassCheck_PassCheckItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{1}
}

func (x *Base_PassCheck_PassCheckItemInfo) GetNormalState() int32 {
	if x != nil {
		return x.NormalState
	}
	return 0
}

func (x *Base_PassCheck_PassCheckItemInfo) GetAdvancedState() int32 {
	if x != nil {
		return x.AdvancedState
	}
	return 0
}

// ====================================================
// 主动更新
type Net_PassCheck_UpdateItemsInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassCheckInfo *Base_PassCheck_PassCheckInfo `protobuf:"bytes,1,opt,name=PassCheckInfo,proto3" json:"PassCheckInfo,omitempty"` //
}

func (x *Net_PassCheck_UpdateItemsInfoRet) Reset() {
	*x = Net_PassCheck_UpdateItemsInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_PassCheck_UpdateItemsInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_UpdateItemsInfoRet) ProtoMessage() {}

func (x *Net_PassCheck_UpdateItemsInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_UpdateItemsInfoRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_UpdateItemsInfoRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{2}
}

func (x *Net_PassCheck_UpdateItemsInfoRet) GetPassCheckInfo() *Base_PassCheck_PassCheckInfo {
	if x != nil {
		return x.PassCheckInfo
	}
	return nil
}

// 领取奖励
type Net_PassCheck_ClaimRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int32 `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //领取奖励Id
	Type   int32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`     //0:初级;1:高级;
}

func (x *Net_PassCheck_ClaimRewardReq) Reset() {
	*x = Net_PassCheck_ClaimRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_PassCheck_ClaimRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_ClaimRewardReq) ProtoMessage() {}

func (x *Net_PassCheck_ClaimRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_ClaimRewardReq.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_ClaimRewardReq) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{3}
}

func (x *Net_PassCheck_ClaimRewardReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Net_PassCheck_ClaimRewardReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Net_PassCheck_ClaimRewardRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:领取成功;1:未知错误;2:积分条件不满足;3:已经领取;
}

func (x *Net_PassCheck_ClaimRewardRet) Reset() {
	*x = Net_PassCheck_ClaimRewardRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_PassCheck_ClaimRewardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_ClaimRewardRet) ProtoMessage() {}

func (x *Net_PassCheck_ClaimRewardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_ClaimRewardRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_ClaimRewardRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{4}
}

func (x *Net_PassCheck_ClaimRewardRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// 购买
type Net_PassCheck_BuyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` //领取奖励Id
}

func (x *Net_PassCheck_BuyReq) Reset() {
	*x = Net_PassCheck_BuyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_PassCheck_BuyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_BuyReq) ProtoMessage() {}

func (x *Net_PassCheck_BuyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_BuyReq.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_BuyReq) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{5}
}

func (x *Net_PassCheck_BuyReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Net_PassCheck_BuyRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //
}

func (x *Net_PassCheck_BuyRet) Reset() {
	*x = Net_PassCheck_BuyRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_PassCheck_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_PassCheck_BuyRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_BuyRet) ProtoMessage() {}

func (x *Net_PassCheck_BuyRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_BuyRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_BuyRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{6}
}

func (x *Net_PassCheck_BuyRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

var File_Net_PassCheck_proto protoreflect.FileDescriptor

var file_Net_PassCheck_proto_rawDesc = []byte{
	0x0a, 0x13, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x50, 0x62, 0x22, 0x81, 0x03, 0x0a, 0x1c, 0x42, 0x61,
	0x73, 0x65, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x50, 0x61, 0x73,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x49, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x49, 0x73, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x11, 0x50, 0x61,
	0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f,
	0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x6a, 0x0a, 0x16, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a,
	0x20, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6a, 0x0a, 0x20, 0x4e, 0x65, 0x74,
	0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x46, 0x0a,
	0x0d, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50,
	0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x30, 0x0a, 0x1c, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x52, 0x65, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x4e,
	0x65, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x52, 0x65, 0x74, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Net_PassCheck_proto_rawDescOnce sync.Once
	file_Net_PassCheck_proto_rawDescData = file_Net_PassCheck_proto_rawDesc
)

func file_Net_PassCheck_proto_rawDescGZIP() []byte {
	file_Net_PassCheck_proto_rawDescOnce.Do(func() {
		file_Net_PassCheck_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_PassCheck_proto_rawDescData)
	})
	return file_Net_PassCheck_proto_rawDescData
}

var file_Net_PassCheck_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_Net_PassCheck_proto_goTypes = []interface{}{
	(*Base_PassCheck_PassCheckInfo)(nil),     // 0: Pb.Base_PassCheck_PassCheckInfo
	(*Base_PassCheck_PassCheckItemInfo)(nil), // 1: Pb.Base_PassCheck_PassCheckItemInfo
	(*Net_PassCheck_UpdateItemsInfoRet)(nil), // 2: Pb.Net_PassCheck_UpdateItemsInfoRet
	(*Net_PassCheck_ClaimRewardReq)(nil),     // 3: Pb.Net_PassCheck_ClaimRewardReq
	(*Net_PassCheck_ClaimRewardRet)(nil),     // 4: Pb.Net_PassCheck_ClaimRewardRet
	(*Net_PassCheck_BuyReq)(nil),             // 5: Pb.Net_PassCheck_BuyReq
	(*Net_PassCheck_BuyRet)(nil),             // 6: Pb.Net_PassCheck_BuyRet
	nil,                                      // 7: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry
}
var file_Net_PassCheck_proto_depIdxs = []int32{
	7, // 0: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemList:type_name -> Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry
	0, // 1: Pb.Net_PassCheck_UpdateItemsInfoRet.PassCheckInfo:type_name -> Pb.Base_PassCheck_PassCheckInfo
	1, // 2: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry.value:type_name -> Pb.Base_PassCheck_PassCheckItemInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_Net_PassCheck_proto_init() }
func file_Net_PassCheck_proto_init() {
	if File_Net_PassCheck_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Net_PassCheck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_PassCheck_PassCheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_PassCheck_PassCheckItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_PassCheck_UpdateItemsInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_PassCheck_ClaimRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_PassCheck_ClaimRewardRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_PassCheck_BuyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_PassCheck_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_PassCheck_BuyRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_PassCheck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_PassCheck_proto_goTypes,
		DependencyIndexes: file_Net_PassCheck_proto_depIdxs,
		MessageInfos:      file_Net_PassCheck_proto_msgTypes,
	}.Build()
	File_Net_PassCheck_proto = out.File
	file_Net_PassCheck_proto_rawDesc = nil
	file_Net_PassCheck_proto_goTypes = nil
	file_Net_PassCheck_proto_depIdxs = nil
}
