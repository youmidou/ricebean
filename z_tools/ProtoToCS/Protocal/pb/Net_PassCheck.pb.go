// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.1
// source: Net_PassCheck.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通行证系统信息
type Base_PassCheck_PassCheckInfo struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Stage     int32                  `protobuf:"varint,1,opt,name=Stage,proto3" json:"Stage,omitempty"`         //赛级等级
	StartTime int64                  `protobuf:"varint,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //开始时间
	EndTime   int64                  `protobuf:"varint,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //结束时间
	// int32 Level = 5;//通行证等级
	Value             int32                                       `protobuf:"varint,6,opt,name=Value,proto3" json:"Value,omitempty"`                                                                                                   //通行证积分值
	IsUnlockAdvanced  int32                                       `protobuf:"varint,7,opt,name=IsUnlockAdvanced,proto3" json:"IsUnlockAdvanced,omitempty"`                                                                             //是否解锁高级 0:未解锁;1:解锁;
	PassCheckItemList map[int32]*Base_PassCheck_PassCheckItemInfo `protobuf:"bytes,8,rep,name=PassCheckItemList,proto3" json:"PassCheckItemList,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //列表信息taskId:
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Base_PassCheck_PassCheckInfo) Reset() {
	*x = Base_PassCheck_PassCheckInfo{}
	mi := &file_Net_PassCheck_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_PassCheck_PassCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_PassCheck_PassCheckInfo) ProtoMessage() {}

func (x *Base_PassCheck_PassCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_PassCheck_PassCheckInfo.ProtoReflect.Descriptor instead.
func (*Base_PassCheck_PassCheckInfo) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{0}
}

func (x *Base_PassCheck_PassCheckInfo) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetIsUnlockAdvanced() int32 {
	if x != nil {
		return x.IsUnlockAdvanced
	}
	return 0
}

func (x *Base_PassCheck_PassCheckInfo) GetPassCheckItemList() map[int32]*Base_PassCheck_PassCheckItemInfo {
	if x != nil {
		return x.PassCheckItemList
	}
	return nil
}

type Base_PassCheck_PassCheckItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NormalState   int32                  `protobuf:"varint,1,opt,name=NormalState,proto3" json:"NormalState,omitempty"`     //普通:: 0:未领取;1:已领取;
	AdvancedState int32                  `protobuf:"varint,2,opt,name=AdvancedState,proto3" json:"AdvancedState,omitempty"` //高级:: 0:未领取;1:已领取;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_PassCheck_PassCheckItemInfo) Reset() {
	*x = Base_PassCheck_PassCheckItemInfo{}
	mi := &file_Net_PassCheck_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_PassCheck_PassCheckItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_PassCheck_PassCheckItemInfo) ProtoMessage() {}

func (x *Base_PassCheck_PassCheckItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_PassCheck_PassCheckItemInfo.ProtoReflect.Descriptor instead.
func (*Base_PassCheck_PassCheckItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{1}
}

func (x *Base_PassCheck_PassCheckItemInfo) GetNormalState() int32 {
	if x != nil {
		return x.NormalState
	}
	return 0
}

func (x *Base_PassCheck_PassCheckItemInfo) GetAdvancedState() int32 {
	if x != nil {
		return x.AdvancedState
	}
	return 0
}

// ====================================================
// 主动更新
type Net_PassCheck_UpdateItemsInfoRet struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	PassCheckInfo *Base_PassCheck_PassCheckInfo `protobuf:"bytes,1,opt,name=PassCheckInfo,proto3" json:"PassCheckInfo,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_PassCheck_UpdateItemsInfoRet) Reset() {
	*x = Net_PassCheck_UpdateItemsInfoRet{}
	mi := &file_Net_PassCheck_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_PassCheck_UpdateItemsInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_UpdateItemsInfoRet) ProtoMessage() {}

func (x *Net_PassCheck_UpdateItemsInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_UpdateItemsInfoRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_UpdateItemsInfoRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{2}
}

func (x *Net_PassCheck_UpdateItemsInfoRet) GetPassCheckInfo() *Base_PassCheck_PassCheckInfo {
	if x != nil {
		return x.PassCheckInfo
	}
	return nil
}

// 领取奖励
type Net_PassCheck_ClaimRewardReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //领取奖励Id
	Type          int32                  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`     //0:初级;1:高级;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_PassCheck_ClaimRewardReq) Reset() {
	*x = Net_PassCheck_ClaimRewardReq{}
	mi := &file_Net_PassCheck_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_PassCheck_ClaimRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_ClaimRewardReq) ProtoMessage() {}

func (x *Net_PassCheck_ClaimRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_ClaimRewardReq.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_ClaimRewardReq) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{3}
}

func (x *Net_PassCheck_ClaimRewardReq) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Net_PassCheck_ClaimRewardReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Net_PassCheck_ClaimRewardRet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           int32                  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:领取成功;1:未知错误;2:积分条件不满足;3:已经领取;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_PassCheck_ClaimRewardRet) Reset() {
	*x = Net_PassCheck_ClaimRewardRet{}
	mi := &file_Net_PassCheck_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_PassCheck_ClaimRewardRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_ClaimRewardRet) ProtoMessage() {}

func (x *Net_PassCheck_ClaimRewardRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_ClaimRewardRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_ClaimRewardRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{4}
}

func (x *Net_PassCheck_ClaimRewardRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// 购买
type Net_PassCheck_BuyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` //领取奖励Id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_PassCheck_BuyReq) Reset() {
	*x = Net_PassCheck_BuyReq{}
	mi := &file_Net_PassCheck_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_PassCheck_BuyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_BuyReq) ProtoMessage() {}

func (x *Net_PassCheck_BuyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_BuyReq.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_BuyReq) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{5}
}

func (x *Net_PassCheck_BuyReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Net_PassCheck_BuyRet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           int32                  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_PassCheck_BuyRet) Reset() {
	*x = Net_PassCheck_BuyRet{}
	mi := &file_Net_PassCheck_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_PassCheck_BuyRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_PassCheck_BuyRet) ProtoMessage() {}

func (x *Net_PassCheck_BuyRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_PassCheck_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_PassCheck_BuyRet.ProtoReflect.Descriptor instead.
func (*Net_PassCheck_BuyRet) Descriptor() ([]byte, []int) {
	return file_Net_PassCheck_proto_rawDescGZIP(), []int{6}
}

func (x *Net_PassCheck_BuyRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

var File_Net_PassCheck_proto protoreflect.FileDescriptor

const file_Net_PassCheck_proto_rawDesc = "" +
	"\n" +
	"\x13Net_PassCheck.proto\x12\x02Pb\"\x81\x03\n" +
	"\x1cBase_PassCheck_PassCheckInfo\x12\x14\n" +
	"\x05Stage\x18\x01 \x01(\x05R\x05Stage\x12\x1c\n" +
	"\tStartTime\x18\x02 \x01(\x03R\tStartTime\x12\x18\n" +
	"\aEndTime\x18\x03 \x01(\x03R\aEndTime\x12\x14\n" +
	"\x05Value\x18\x06 \x01(\x05R\x05Value\x12*\n" +
	"\x10IsUnlockAdvanced\x18\a \x01(\x05R\x10IsUnlockAdvanced\x12e\n" +
	"\x11PassCheckItemList\x18\b \x03(\v27.Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntryR\x11PassCheckItemList\x1aj\n" +
	"\x16PassCheckItemListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.Pb.Base_PassCheck_PassCheckItemInfoR\x05value:\x028\x01\"j\n" +
	" Base_PassCheck_PassCheckItemInfo\x12 \n" +
	"\vNormalState\x18\x01 \x01(\x05R\vNormalState\x12$\n" +
	"\rAdvancedState\x18\x02 \x01(\x05R\rAdvancedState\"j\n" +
	" Net_PassCheck_UpdateItemsInfoRet\x12F\n" +
	"\rPassCheckInfo\x18\x01 \x01(\v2 .Pb.Base_PassCheck_PassCheckInfoR\rPassCheckInfo\"J\n" +
	"\x1cNet_PassCheck_ClaimRewardReq\x12\x16\n" +
	"\x06TaskId\x18\x01 \x01(\x05R\x06TaskId\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\x05R\x04Type\"0\n" +
	"\x1cNet_PassCheck_ClaimRewardRet\x12\x10\n" +
	"\x03Ret\x18\x01 \x01(\x05R\x03Ret\"&\n" +
	"\x14Net_PassCheck_BuyReq\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x05R\x02Id\"(\n" +
	"\x14Net_PassCheck_BuyRet\x12\x10\n" +
	"\x03Ret\x18\x01 \x01(\x05R\x03RetB\x06Z\x04./pbb\x06proto3"

var (
	file_Net_PassCheck_proto_rawDescOnce sync.Once
	file_Net_PassCheck_proto_rawDescData []byte
)

func file_Net_PassCheck_proto_rawDescGZIP() []byte {
	file_Net_PassCheck_proto_rawDescOnce.Do(func() {
		file_Net_PassCheck_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Net_PassCheck_proto_rawDesc), len(file_Net_PassCheck_proto_rawDesc)))
	})
	return file_Net_PassCheck_proto_rawDescData
}

var file_Net_PassCheck_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_Net_PassCheck_proto_goTypes = []any{
	(*Base_PassCheck_PassCheckInfo)(nil),     // 0: Pb.Base_PassCheck_PassCheckInfo
	(*Base_PassCheck_PassCheckItemInfo)(nil), // 1: Pb.Base_PassCheck_PassCheckItemInfo
	(*Net_PassCheck_UpdateItemsInfoRet)(nil), // 2: Pb.Net_PassCheck_UpdateItemsInfoRet
	(*Net_PassCheck_ClaimRewardReq)(nil),     // 3: Pb.Net_PassCheck_ClaimRewardReq
	(*Net_PassCheck_ClaimRewardRet)(nil),     // 4: Pb.Net_PassCheck_ClaimRewardRet
	(*Net_PassCheck_BuyReq)(nil),             // 5: Pb.Net_PassCheck_BuyReq
	(*Net_PassCheck_BuyRet)(nil),             // 6: Pb.Net_PassCheck_BuyRet
	nil,                                      // 7: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry
}
var file_Net_PassCheck_proto_depIdxs = []int32{
	7, // 0: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemList:type_name -> Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry
	0, // 1: Pb.Net_PassCheck_UpdateItemsInfoRet.PassCheckInfo:type_name -> Pb.Base_PassCheck_PassCheckInfo
	1, // 2: Pb.Base_PassCheck_PassCheckInfo.PassCheckItemListEntry.value:type_name -> Pb.Base_PassCheck_PassCheckItemInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_Net_PassCheck_proto_init() }
func file_Net_PassCheck_proto_init() {
	if File_Net_PassCheck_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Net_PassCheck_proto_rawDesc), len(file_Net_PassCheck_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_PassCheck_proto_goTypes,
		DependencyIndexes: file_Net_PassCheck_proto_depIdxs,
		MessageInfos:      file_Net_PassCheck_proto_msgTypes,
	}.Build()
	File_Net_PassCheck_proto = out.File
	file_Net_PassCheck_proto_goTypes = nil
	file_Net_PassCheck_proto_depIdxs = nil
}
