// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_Lobby.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 大厅消息
//
// added by yh @ 2023/11/30 10:29
// 注意:大厅小功能就放大厅 难得建文件夹
type Base_Lobby_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //
	GameName string `protobuf:"bytes,2,opt,name=GameName,proto3" json:"GameName,omitempty"`
	PlatName string `protobuf:"bytes,3,opt,name=PlatName,proto3" json:"PlatName,omitempty"`
	SceneId  int32  `protobuf:"varint,4,opt,name=SceneId,proto3" json:"SceneId,omitempty"`
}

func (x *Base_Lobby_UserInfo) Reset() {
	*x = Base_Lobby_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Lobby_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Lobby_UserInfo) ProtoMessage() {}

func (x *Base_Lobby_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Lobby_UserInfo.ProtoReflect.Descriptor instead.
func (*Base_Lobby_UserInfo) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{0}
}

func (x *Base_Lobby_UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Base_Lobby_UserInfo) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *Base_Lobby_UserInfo) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *Base_Lobby_UserInfo) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

// 授权登录
type Net_Lobby_AuthorizationLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string               `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	UserInfo *Base_Lobby_UserInfo `protobuf:"bytes,2,opt,name=UserInfo,proto3" json:"UserInfo,omitempty"` //用户信息
}

func (x *Net_Lobby_AuthorizationLoginReq) Reset() {
	*x = Net_Lobby_AuthorizationLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_AuthorizationLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_AuthorizationLoginReq) ProtoMessage() {}

func (x *Net_Lobby_AuthorizationLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_AuthorizationLoginReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_AuthorizationLoginReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{1}
}

func (x *Net_Lobby_AuthorizationLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Net_Lobby_AuthorizationLoginReq) GetUserInfo() *Base_Lobby_UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 授权登录
type Net_Lobby_AuthorizationLoginRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功；1:失败；
}

func (x *Net_Lobby_AuthorizationLoginRet) Reset() {
	*x = Net_Lobby_AuthorizationLoginRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_AuthorizationLoginRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_AuthorizationLoginRet) ProtoMessage() {}

func (x *Net_Lobby_AuthorizationLoginRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_AuthorizationLoginRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_AuthorizationLoginRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{2}
}

func (x *Net_Lobby_AuthorizationLoginRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// 授权进入游戏
type Net_Lobby_AuthorizationEnterGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=GameId,proto3" json:"GameId,omitempty"`
}

func (x *Net_Lobby_AuthorizationEnterGameReq) Reset() {
	*x = Net_Lobby_AuthorizationEnterGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_AuthorizationEnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_AuthorizationEnterGameReq) ProtoMessage() {}

func (x *Net_Lobby_AuthorizationEnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_AuthorizationEnterGameReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_AuthorizationEnterGameReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{3}
}

func (x *Net_Lobby_AuthorizationEnterGameReq) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// 授权进入游戏
type Net_Lobby_AuthorizationEnterGameRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功；1:失败；
}

func (x *Net_Lobby_AuthorizationEnterGameRet) Reset() {
	*x = Net_Lobby_AuthorizationEnterGameRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_AuthorizationEnterGameRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_AuthorizationEnterGameRet) ProtoMessage() {}

func (x *Net_Lobby_AuthorizationEnterGameRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_AuthorizationEnterGameRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_AuthorizationEnterGameRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{4}
}

func (x *Net_Lobby_AuthorizationEnterGameRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// 幸运大转盘
type Net_Lobby_LuckyWheelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Lobby_LuckyWheelReq) Reset() {
	*x = Net_Lobby_LuckyWheelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_LuckyWheelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_LuckyWheelReq) ProtoMessage() {}

func (x *Net_Lobby_LuckyWheelReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_LuckyWheelReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_LuckyWheelReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{5}
}

// 幸运大转盘
type Net_Lobby_LuckyWheelRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`             //0:成功；1:材料不够；
	WinningId int32 `protobuf:"varint,2,opt,name=WinningId,proto3" json:"WinningId,omitempty"` //中奖Id
	PrizeId   int32 `protobuf:"varint,3,opt,name=PrizeId,proto3" json:"PrizeId,omitempty"`     //中奖物品Id
	PrizeNum  int32 `protobuf:"varint,4,opt,name=PrizeNum,proto3" json:"PrizeNum,omitempty"`   //中奖物品数量
}

func (x *Net_Lobby_LuckyWheelRet) Reset() {
	*x = Net_Lobby_LuckyWheelRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_LuckyWheelRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_LuckyWheelRet) ProtoMessage() {}

func (x *Net_Lobby_LuckyWheelRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_LuckyWheelRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_LuckyWheelRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{6}
}

func (x *Net_Lobby_LuckyWheelRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *Net_Lobby_LuckyWheelRet) GetWinningId() int32 {
	if x != nil {
		return x.WinningId
	}
	return 0
}

func (x *Net_Lobby_LuckyWheelRet) GetPrizeId() int32 {
	if x != nil {
		return x.PrizeId
	}
	return 0
}

func (x *Net_Lobby_LuckyWheelRet) GetPrizeNum() int32 {
	if x != nil {
		return x.PrizeNum
	}
	return 0
}

// 进入大厅
type Net_Lobby_EnterLobbyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Lobby_EnterLobbyReq) Reset() {
	*x = Net_Lobby_EnterLobbyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_EnterLobbyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_EnterLobbyReq) ProtoMessage() {}

func (x *Net_Lobby_EnterLobbyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_EnterLobbyReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_EnterLobbyReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{7}
}

type Net_Lobby_EnterLobbyRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins int32 `protobuf:"varint,1,opt,name=Coins,proto3" json:"Coins,omitempty"` //同步前后端金币
	Chips int32 `protobuf:"varint,2,opt,name=Chips,proto3" json:"Chips,omitempty"` //同步前后端宝石
}

func (x *Net_Lobby_EnterLobbyRet) Reset() {
	*x = Net_Lobby_EnterLobbyRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_EnterLobbyRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_EnterLobbyRet) ProtoMessage() {}

func (x *Net_Lobby_EnterLobbyRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_EnterLobbyRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_EnterLobbyRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{8}
}

func (x *Net_Lobby_EnterLobbyRet) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *Net_Lobby_EnterLobbyRet) GetChips() int32 {
	if x != nil {
		return x.Chips
	}
	return 0
}

// 获得 Fcm 奖励
type Net_Lobby_GetFcmRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Key  string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`   //
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"` //
}

func (x *Net_Lobby_GetFcmRewardsReq) Reset() {
	*x = Net_Lobby_GetFcmRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_GetFcmRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_GetFcmRewardsReq) ProtoMessage() {}

func (x *Net_Lobby_GetFcmRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_GetFcmRewardsReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_GetFcmRewardsReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{9}
}

func (x *Net_Lobby_GetFcmRewardsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Net_Lobby_GetFcmRewardsReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Net_Lobby_GetFcmRewardsReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Net_Lobby_GetFcmRewardsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvalidType int32  `protobuf:"varint,1,opt,name=InvalidType,proto3" json:"InvalidType,omitempty"` //
	FcmRewards  string `protobuf:"bytes,2,opt,name=FcmRewards,proto3" json:"FcmRewards,omitempty"`    //
	Type        string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`                //
}

func (x *Net_Lobby_GetFcmRewardsRet) Reset() {
	*x = Net_Lobby_GetFcmRewardsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_GetFcmRewardsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_GetFcmRewardsRet) ProtoMessage() {}

func (x *Net_Lobby_GetFcmRewardsRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_GetFcmRewardsRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_GetFcmRewardsRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{10}
}

func (x *Net_Lobby_GetFcmRewardsRet) GetInvalidType() int32 {
	if x != nil {
		return x.InvalidType
	}
	return 0
}

func (x *Net_Lobby_GetFcmRewardsRet) GetFcmRewards() string {
	if x != nil {
		return x.FcmRewards
	}
	return ""
}

func (x *Net_Lobby_GetFcmRewardsRet) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 收集 Fcm 奖励
type Net_Lobby_CollectFcmRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`     //
	Key  string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`   //
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"` //
}

func (x *Net_Lobby_CollectFcmRewardsReq) Reset() {
	*x = Net_Lobby_CollectFcmRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectFcmRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectFcmRewardsReq) ProtoMessage() {}

func (x *Net_Lobby_CollectFcmRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectFcmRewardsReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectFcmRewardsReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{11}
}

func (x *Net_Lobby_CollectFcmRewardsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Net_Lobby_CollectFcmRewardsReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Net_Lobby_CollectFcmRewardsReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Net_Lobby_CollectFcmRewardsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvalidType int32  `protobuf:"varint,1,opt,name=InvalidType,proto3" json:"InvalidType,omitempty"` //
	FcmRewards  string `protobuf:"bytes,2,opt,name=FcmRewards,proto3" json:"FcmRewards,omitempty"`    //
	Type        string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`                //
}

func (x *Net_Lobby_CollectFcmRewardsRet) Reset() {
	*x = Net_Lobby_CollectFcmRewardsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectFcmRewardsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectFcmRewardsRet) ProtoMessage() {}

func (x *Net_Lobby_CollectFcmRewardsRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectFcmRewardsRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectFcmRewardsRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{12}
}

func (x *Net_Lobby_CollectFcmRewardsRet) GetInvalidType() int32 {
	if x != nil {
		return x.InvalidType
	}
	return 0
}

func (x *Net_Lobby_CollectFcmRewardsRet) GetFcmRewards() string {
	if x != nil {
		return x.FcmRewards
	}
	return ""
}

func (x *Net_Lobby_CollectFcmRewardsRet) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 收集周奖励
type Base_Lobby_WeeklyPrize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins      int32 `protobuf:"varint,1,opt,name=Coins,proto3" json:"Coins,omitempty"`           //获得金币
	Golds      int32 `protobuf:"varint,2,opt,name=Golds,proto3" json:"Golds,omitempty"`           //获得砖石
	HolyGrails int32 `protobuf:"varint,3,opt,name=HolyGrails,proto3" json:"HolyGrails,omitempty"` //获得奖杯
}

func (x *Base_Lobby_WeeklyPrize) Reset() {
	*x = Base_Lobby_WeeklyPrize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Lobby_WeeklyPrize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Lobby_WeeklyPrize) ProtoMessage() {}

func (x *Base_Lobby_WeeklyPrize) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Lobby_WeeklyPrize.ProtoReflect.Descriptor instead.
func (*Base_Lobby_WeeklyPrize) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{13}
}

func (x *Base_Lobby_WeeklyPrize) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *Base_Lobby_WeeklyPrize) GetGolds() int32 {
	if x != nil {
		return x.Golds
	}
	return 0
}

func (x *Base_Lobby_WeeklyPrize) GetHolyGrails() int32 {
	if x != nil {
		return x.HolyGrails
	}
	return 0
}

// 收集每日签到奖励
type Net_Lobby_CollectLoginBonusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Lobby_CollectLoginBonusReq) Reset() {
	*x = Net_Lobby_CollectLoginBonusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectLoginBonusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectLoginBonusReq) ProtoMessage() {}

func (x *Net_Lobby_CollectLoginBonusReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectLoginBonusReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectLoginBonusReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{14}
}

type Net_Lobby_CollectLoginBonusRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               int32                       `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`                             //0:签到成功;1:已经签到;
	LoginBonusInfo    *Base_Player_LoginBonusInfo `protobuf:"bytes,2,opt,name=LoginBonusInfo,proto3" json:"LoginBonusInfo,omitempty"`        //每日签到信息
	WeeklyPrize       *Base_Lobby_WeeklyPrize     `protobuf:"bytes,3,opt,name=WeeklyPrize,proto3" json:"WeeklyPrize,omitempty"`              //周奖励信息
	CurrentCoins      int32                       `protobuf:"varint,4,opt,name=CurrentCoins,proto3" json:"CurrentCoins,omitempty"`           //当前金币
	CurrentGolds      int32                       `protobuf:"varint,5,opt,name=CurrentGolds,proto3" json:"CurrentGolds,omitempty"`           //当前钻石
	CurrentHolyGrails int32                       `protobuf:"varint,6,opt,name=CurrentHolyGrails,proto3" json:"CurrentHolyGrails,omitempty"` //当前奖杯
}

func (x *Net_Lobby_CollectLoginBonusRet) Reset() {
	*x = Net_Lobby_CollectLoginBonusRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectLoginBonusRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectLoginBonusRet) ProtoMessage() {}

func (x *Net_Lobby_CollectLoginBonusRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectLoginBonusRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectLoginBonusRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{15}
}

func (x *Net_Lobby_CollectLoginBonusRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *Net_Lobby_CollectLoginBonusRet) GetLoginBonusInfo() *Base_Player_LoginBonusInfo {
	if x != nil {
		return x.LoginBonusInfo
	}
	return nil
}

func (x *Net_Lobby_CollectLoginBonusRet) GetWeeklyPrize() *Base_Lobby_WeeklyPrize {
	if x != nil {
		return x.WeeklyPrize
	}
	return nil
}

func (x *Net_Lobby_CollectLoginBonusRet) GetCurrentCoins() int32 {
	if x != nil {
		return x.CurrentCoins
	}
	return 0
}

func (x *Net_Lobby_CollectLoginBonusRet) GetCurrentGolds() int32 {
	if x != nil {
		return x.CurrentGolds
	}
	return 0
}

func (x *Net_Lobby_CollectLoginBonusRet) GetCurrentHolyGrails() int32 {
	if x != nil {
		return x.CurrentHolyGrails
	}
	return 0
}

// 补签登录奖励
type Net_Lobby_ReissueLoginBonusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonthCount int32 `protobuf:"varint,1,opt,name=MonthCount,proto3" json:"MonthCount,omitempty"` //补签的那一天数
}

func (x *Net_Lobby_ReissueLoginBonusReq) Reset() {
	*x = Net_Lobby_ReissueLoginBonusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_ReissueLoginBonusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_ReissueLoginBonusReq) ProtoMessage() {}

func (x *Net_Lobby_ReissueLoginBonusReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_ReissueLoginBonusReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_ReissueLoginBonusReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{16}
}

func (x *Net_Lobby_ReissueLoginBonusReq) GetMonthCount() int32 {
	if x != nil {
		return x.MonthCount
	}
	return 0
}

type Net_Lobby_ReissueLoginBonusRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               int32                       `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`                             //0:签到成功;1:已经签到;2:金币不够;
	LoginBonusInfo    *Base_Player_LoginBonusInfo `protobuf:"bytes,2,opt,name=LoginBonusInfo,proto3" json:"LoginBonusInfo,omitempty"`        //每日签到信息
	WeeklyPrize       *Base_Lobby_WeeklyPrize     `protobuf:"bytes,3,opt,name=WeeklyPrize,proto3" json:"WeeklyPrize,omitempty"`              //周奖励信息
	CurrentCoins      int32                       `protobuf:"varint,4,opt,name=CurrentCoins,proto3" json:"CurrentCoins,omitempty"`           //当前金币
	CurrentGolds      int32                       `protobuf:"varint,5,opt,name=CurrentGolds,proto3" json:"CurrentGolds,omitempty"`           //当前钻石
	CurrentHolyGrails int32                       `protobuf:"varint,6,opt,name=CurrentHolyGrails,proto3" json:"CurrentHolyGrails,omitempty"` //当前奖杯
}

func (x *Net_Lobby_ReissueLoginBonusRet) Reset() {
	*x = Net_Lobby_ReissueLoginBonusRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_ReissueLoginBonusRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_ReissueLoginBonusRet) ProtoMessage() {}

func (x *Net_Lobby_ReissueLoginBonusRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_ReissueLoginBonusRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_ReissueLoginBonusRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{17}
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetLoginBonusInfo() *Base_Player_LoginBonusInfo {
	if x != nil {
		return x.LoginBonusInfo
	}
	return nil
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetWeeklyPrize() *Base_Lobby_WeeklyPrize {
	if x != nil {
		return x.WeeklyPrize
	}
	return nil
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetCurrentCoins() int32 {
	if x != nil {
		return x.CurrentCoins
	}
	return 0
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetCurrentGolds() int32 {
	if x != nil {
		return x.CurrentGolds
	}
	return 0
}

func (x *Net_Lobby_ReissueLoginBonusRet) GetCurrentHolyGrails() int32 {
	if x != nil {
		return x.CurrentHolyGrails
	}
	return 0
}

// 获取每日登陆奖励
type Net_Lobby_GetDailyBonusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Lobby_GetDailyBonusReq) Reset() {
	*x = Net_Lobby_GetDailyBonusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_GetDailyBonusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_GetDailyBonusReq) ProtoMessage() {}

func (x *Net_Lobby_GetDailyBonusReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_GetDailyBonusReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_GetDailyBonusReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{18}
}

type Net_Lobby_GetDailyBonusRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyBonusInfo *Base_Player_DailyBonusInfo `protobuf:"bytes,1,opt,name=DailyBonusInfo,proto3" json:"DailyBonusInfo,omitempty"` //每日奖励
}

func (x *Net_Lobby_GetDailyBonusRet) Reset() {
	*x = Net_Lobby_GetDailyBonusRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_GetDailyBonusRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_GetDailyBonusRet) ProtoMessage() {}

func (x *Net_Lobby_GetDailyBonusRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_GetDailyBonusRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_GetDailyBonusRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{19}
}

func (x *Net_Lobby_GetDailyBonusRet) GetDailyBonusInfo() *Base_Player_DailyBonusInfo {
	if x != nil {
		return x.DailyBonusInfo
	}
	return nil
}

// 收集每日登录奖励
type Net_Lobby_CollectDailyBonusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickIndex int32 `protobuf:"varint,1,opt,name=TickIndex,proto3" json:"TickIndex,omitempty"` //领取每日奖励索引
}

func (x *Net_Lobby_CollectDailyBonusReq) Reset() {
	*x = Net_Lobby_CollectDailyBonusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectDailyBonusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectDailyBonusReq) ProtoMessage() {}

func (x *Net_Lobby_CollectDailyBonusReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectDailyBonusReq.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectDailyBonusReq) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{20}
}

func (x *Net_Lobby_CollectDailyBonusReq) GetTickIndex() int32 {
	if x != nil {
		return x.TickIndex
	}
	return 0
}

type Net_Lobby_CollectDailyBonusRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickIndex int32 `protobuf:"varint,1,opt,name=TickIndex,proto3" json:"TickIndex,omitempty"` //领取每日奖励索引
	IsBool    bool  `protobuf:"varint,2,opt,name=IsBool,proto3" json:"IsBool,omitempty"`       //true:成功;false:失败;
}

func (x *Net_Lobby_CollectDailyBonusRet) Reset() {
	*x = Net_Lobby_CollectDailyBonusRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Lobby_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Lobby_CollectDailyBonusRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Lobby_CollectDailyBonusRet) ProtoMessage() {}

func (x *Net_Lobby_CollectDailyBonusRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Lobby_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Lobby_CollectDailyBonusRet.ProtoReflect.Descriptor instead.
func (*Net_Lobby_CollectDailyBonusRet) Descriptor() ([]byte, []int) {
	return file_Net_Lobby_proto_rawDescGZIP(), []int{21}
}

func (x *Net_Lobby_CollectDailyBonusRet) GetTickIndex() int32 {
	if x != nil {
		return x.TickIndex
	}
	return 0
}

func (x *Net_Lobby_CollectDailyBonusRet) GetIsBool() bool {
	if x != nil {
		return x.IsBool
	}
	return false
}

var File_Net_Lobby_proto protoreflect.FileDescriptor

var file_Net_Lobby_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x50, 0x62, 0x1a, 0x10, 0x4e, 0x65, 0x74, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x13, 0x42, 0x61, 0x73, 0x65, 0x5f,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x33, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x23, 0x4e,
	0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x23, 0x4e, 0x65,
	0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x52, 0x65, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x5f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x7f,
	0x0a, 0x17, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x57,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x57, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x75, 0x6d, 0x22,
	0x19, 0x0a, 0x17, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x17, 0x4e, 0x65,
	0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x52, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x68, 0x69, 0x70,
	0x73, 0x22, 0x52, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x47,
	0x65, 0x74, 0x46, 0x63, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x63, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x63, 0x6d, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x63, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x1e, 0x4e, 0x65, 0x74,
	0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x63,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x76, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x63, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x63, 0x6d, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x63, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x42, 0x61, 0x73,
	0x65, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x6f, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x47, 0x6f, 0x6c, 0x64, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x48, 0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x20, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x22, 0xae, 0x02, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c,
	0x0a, 0x0b, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x5f, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x0b, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x6f, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48,
	0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x40, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x1e, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3c, 0x0a, 0x0b, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x0b, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x6f,
	0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x79, 0x47,
	0x72, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x22, 0x64, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65,
	0x74, 0x12, 0x46, 0x0a, 0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x62, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x1e, 0x4e, 0x65, 0x74,
	0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x56, 0x0a, 0x1e, 0x4e, 0x65, 0x74,
	0x5f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x42,
	0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x42, 0x6f, 0x6f,
	0x6c, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_Net_Lobby_proto_rawDescOnce sync.Once
	file_Net_Lobby_proto_rawDescData = file_Net_Lobby_proto_rawDesc
)

func file_Net_Lobby_proto_rawDescGZIP() []byte {
	file_Net_Lobby_proto_rawDescOnce.Do(func() {
		file_Net_Lobby_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_Lobby_proto_rawDescData)
	})
	return file_Net_Lobby_proto_rawDescData
}

var file_Net_Lobby_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_Net_Lobby_proto_goTypes = []interface{}{
	(*Base_Lobby_UserInfo)(nil),                 // 0: Pb.Base_Lobby_UserInfo
	(*Net_Lobby_AuthorizationLoginReq)(nil),     // 1: Pb.Net_Lobby_AuthorizationLoginReq
	(*Net_Lobby_AuthorizationLoginRet)(nil),     // 2: Pb.Net_Lobby_AuthorizationLoginRet
	(*Net_Lobby_AuthorizationEnterGameReq)(nil), // 3: Pb.Net_Lobby_AuthorizationEnterGameReq
	(*Net_Lobby_AuthorizationEnterGameRet)(nil), // 4: Pb.Net_Lobby_AuthorizationEnterGameRet
	(*Net_Lobby_LuckyWheelReq)(nil),             // 5: Pb.Net_Lobby_LuckyWheelReq
	(*Net_Lobby_LuckyWheelRet)(nil),             // 6: Pb.Net_Lobby_LuckyWheelRet
	(*Net_Lobby_EnterLobbyReq)(nil),             // 7: Pb.Net_Lobby_EnterLobbyReq
	(*Net_Lobby_EnterLobbyRet)(nil),             // 8: Pb.Net_Lobby_EnterLobbyRet
	(*Net_Lobby_GetFcmRewardsReq)(nil),          // 9: Pb.Net_Lobby_GetFcmRewardsReq
	(*Net_Lobby_GetFcmRewardsRet)(nil),          // 10: Pb.Net_Lobby_GetFcmRewardsRet
	(*Net_Lobby_CollectFcmRewardsReq)(nil),      // 11: Pb.Net_Lobby_CollectFcmRewardsReq
	(*Net_Lobby_CollectFcmRewardsRet)(nil),      // 12: Pb.Net_Lobby_CollectFcmRewardsRet
	(*Base_Lobby_WeeklyPrize)(nil),              // 13: Pb.Base_Lobby_WeeklyPrize
	(*Net_Lobby_CollectLoginBonusReq)(nil),      // 14: Pb.Net_Lobby_CollectLoginBonusReq
	(*Net_Lobby_CollectLoginBonusRet)(nil),      // 15: Pb.Net_Lobby_CollectLoginBonusRet
	(*Net_Lobby_ReissueLoginBonusReq)(nil),      // 16: Pb.Net_Lobby_ReissueLoginBonusReq
	(*Net_Lobby_ReissueLoginBonusRet)(nil),      // 17: Pb.Net_Lobby_ReissueLoginBonusRet
	(*Net_Lobby_GetDailyBonusReq)(nil),          // 18: Pb.Net_Lobby_GetDailyBonusReq
	(*Net_Lobby_GetDailyBonusRet)(nil),          // 19: Pb.Net_Lobby_GetDailyBonusRet
	(*Net_Lobby_CollectDailyBonusReq)(nil),      // 20: Pb.Net_Lobby_CollectDailyBonusReq
	(*Net_Lobby_CollectDailyBonusRet)(nil),      // 21: Pb.Net_Lobby_CollectDailyBonusRet
	(*Base_Player_LoginBonusInfo)(nil),          // 22: Pb.Base_Player_LoginBonusInfo
	(*Base_Player_DailyBonusInfo)(nil),          // 23: Pb.Base_Player_DailyBonusInfo
}
var file_Net_Lobby_proto_depIdxs = []int32{
	0,  // 0: Pb.Net_Lobby_AuthorizationLoginReq.UserInfo:type_name -> Pb.Base_Lobby_UserInfo
	22, // 1: Pb.Net_Lobby_CollectLoginBonusRet.LoginBonusInfo:type_name -> Pb.Base_Player_LoginBonusInfo
	13, // 2: Pb.Net_Lobby_CollectLoginBonusRet.WeeklyPrize:type_name -> Pb.Base_Lobby_WeeklyPrize
	22, // 3: Pb.Net_Lobby_ReissueLoginBonusRet.LoginBonusInfo:type_name -> Pb.Base_Player_LoginBonusInfo
	13, // 4: Pb.Net_Lobby_ReissueLoginBonusRet.WeeklyPrize:type_name -> Pb.Base_Lobby_WeeklyPrize
	23, // 5: Pb.Net_Lobby_GetDailyBonusRet.DailyBonusInfo:type_name -> Pb.Base_Player_DailyBonusInfo
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_Net_Lobby_proto_init() }
func file_Net_Lobby_proto_init() {
	if File_Net_Lobby_proto != nil {
		return
	}
	file_Net_Player_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Net_Lobby_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Lobby_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_AuthorizationLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_AuthorizationLoginRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_AuthorizationEnterGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_AuthorizationEnterGameRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_LuckyWheelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_LuckyWheelRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_EnterLobbyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_EnterLobbyRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_GetFcmRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_GetFcmRewardsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectFcmRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectFcmRewardsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Lobby_WeeklyPrize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectLoginBonusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectLoginBonusRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_ReissueLoginBonusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_ReissueLoginBonusRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_GetDailyBonusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_GetDailyBonusRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectDailyBonusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Lobby_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Lobby_CollectDailyBonusRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_Lobby_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_Lobby_proto_goTypes,
		DependencyIndexes: file_Net_Lobby_proto_depIdxs,
		MessageInfos:      file_Net_Lobby_proto_msgTypes,
	}.Build()
	File_Net_Lobby_proto = out.File
	file_Net_Lobby_proto_rawDesc = nil
	file_Net_Lobby_proto_goTypes = nil
	file_Net_Lobby_proto_depIdxs = nil
}
