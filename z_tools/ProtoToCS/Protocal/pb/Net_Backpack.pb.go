// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.1
// source: Net_Backpack.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 背包类型
type EBackpack int32

const (
	EBackpack_EBackpackTypeIdle   EBackpack = 0   //空置占位没用
	EBackpack_EBackpackTypeItem   EBackpack = 1   //物品背包
	EBackpack_EBackpackTypeDepot  EBackpack = 2   //仓库
	EBackpack_EBackpackTypeDummy  EBackpack = 3   //虚拟背包
	EBackpack_EBackpackMaxGridNum EBackpack = 100 //最大背包格子数
)

// Enum value maps for EBackpack.
var (
	EBackpack_name = map[int32]string{
		0:   "EBackpackTypeIdle",
		1:   "EBackpackTypeItem",
		2:   "EBackpackTypeDepot",
		3:   "EBackpackTypeDummy",
		100: "EBackpackMaxGridNum",
	}
	EBackpack_value = map[string]int32{
		"EBackpackTypeIdle":   0,
		"EBackpackTypeItem":   1,
		"EBackpackTypeDepot":  2,
		"EBackpackTypeDummy":  3,
		"EBackpackMaxGridNum": 100,
	}
)

func (x EBackpack) Enum() *EBackpack {
	p := new(EBackpack)
	*p = x
	return p
}

func (x EBackpack) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBackpack) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[0].Descriptor()
}

func (EBackpack) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[0]
}

func (x EBackpack) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBackpack.Descriptor instead.
func (EBackpack) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{0}
}

// 背包类型
type EBagId int32

const (
	EBagId_EBagIdIdle  EBagId = 0   //空置占位没用
	EBagId_EBagIdMain  EBagId = 101 //主背包
	EBagId_EBagIdPet   EBagId = 102 //宠物背包
	EBagId_EBagIdDepot EBagId = 201 //主仓库
)

// Enum value maps for EBagId.
var (
	EBagId_name = map[int32]string{
		0:   "EBagIdIdle",
		101: "EBagIdMain",
		102: "EBagIdPet",
		201: "EBagIdDepot",
	}
	EBagId_value = map[string]int32{
		"EBagIdIdle":  0,
		"EBagIdMain":  101,
		"EBagIdPet":   102,
		"EBagIdDepot": 201,
	}
)

func (x EBagId) Enum() *EBagId {
	p := new(EBagId)
	*p = x
	return p
}

func (x EBagId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBagId) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[1].Descriptor()
}

func (EBagId) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[1]
}

func (x EBagId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBagId.Descriptor instead.
func (EBagId) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{1}
}

// 货币Currency BackpackItems
type EItemId int32

const (
	EItemId_BackpackItemIdle EItemId = 0    //空置占位没用
	EItemId_CoinItemId       EItemId = 1001 //金币
	EItemId_GoldItemId       EItemId = 1002 //钻石
	EItemId_HolyGrailItemId  EItemId = 2001 //奖杯积分
	EItemId_ItemId4002       EItemId = 4002 //通行证积分
)

// Enum value maps for EItemId.
var (
	EItemId_name = map[int32]string{
		0:    "BackpackItemIdle",
		1001: "CoinItemId",
		1002: "GoldItemId",
		2001: "HolyGrailItemId",
		4002: "ItemId4002",
	}
	EItemId_value = map[string]int32{
		"BackpackItemIdle": 0,
		"CoinItemId":       1001,
		"GoldItemId":       1002,
		"HolyGrailItemId":  2001,
		"ItemId4002":       4002,
	}
)

func (x EItemId) Enum() *EItemId {
	p := new(EItemId)
	*p = x
	return p
}

func (x EItemId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemId) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[2].Descriptor()
}

func (EItemId) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[2]
}

func (x EItemId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EItemId.Descriptor instead.
func (EItemId) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{2}
}

// 放置原因类型
type EPutReasonType int32

const (
	EPutReasonType_PutReasonInvalid  EPutReasonType = 0 //放置原因无效
	EPutReasonType_PutReasonNoNotice EPutReasonType = 1 //放置原因无通知
	EPutReasonType_PutReasonGM       EPutReasonType = 2 //GM
)

// Enum value maps for EPutReasonType.
var (
	EPutReasonType_name = map[int32]string{
		0: "PutReasonInvalid",
		1: "PutReasonNoNotice",
		2: "PutReasonGM",
	}
	EPutReasonType_value = map[string]int32{
		"PutReasonInvalid":  0,
		"PutReasonNoNotice": 1,
		"PutReasonGM":       2,
	}
)

func (x EPutReasonType) Enum() *EPutReasonType {
	p := new(EPutReasonType)
	*p = x
	return p
}

func (x EPutReasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPutReasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[3].Descriptor()
}

func (EPutReasonType) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[3]
}

func (x EPutReasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPutReasonType.Descriptor instead.
func (EPutReasonType) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{3}
}

// 背包信息
type Base_Backpack_BackpackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemInfoList map[int32]int32 `protobuf:"bytes,1,rep,name=ItemInfoList,proto3" json:"ItemInfoList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //物品列表
}

func (x *Base_Backpack_BackpackInfo) Reset() {
	*x = Base_Backpack_BackpackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_BackpackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_BackpackInfo) ProtoMessage() {}

func (x *Base_Backpack_BackpackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_BackpackInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_BackpackInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{0}
}

func (x *Base_Backpack_BackpackInfo) GetItemInfoList() map[int32]int32 {
	if x != nil {
		return x.ItemInfoList
	}
	return nil
}

// 一个消耗订单
type Base_Backpack_ConsumeOperationOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType int32 `protobuf:"varint,1,opt,name=OperationType,proto3" json:"OperationType,omitempty"` //操作类型
	// Base_Backpack_MoneyInfo ConsumeMoney =2;//消耗的Money
	ConsumeItemList int32 `protobuf:"varint,3,opt,name=ConsumeItemList,proto3" json:"ConsumeItemList,omitempty"` //消耗的物品列表
	// Base_Backpack_MoneyInfo AcquireMoney=4;//获得物品列表
	AcquireItemList int32 `protobuf:"varint,5,opt,name=AcquireItemList,proto3" json:"AcquireItemList,omitempty"` //获得物品列表
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) Reset() {
	*x = Base_Backpack_ConsumeOperationOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ConsumeOperationOrderInfo) ProtoMessage() {}

func (x *Base_Backpack_ConsumeOperationOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ConsumeOperationOrderInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ConsumeOperationOrderInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{1}
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetConsumeItemList() int32 {
	if x != nil {
		return x.ConsumeItemList
	}
	return 0
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetAcquireItemList() int32 {
	if x != nil {
		return x.AcquireItemList
	}
	return 0
}

// 金钱
type Base_Backpack_MoneyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int32 `protobuf:"varint,1,opt,name=Coin,proto3" json:"Coin,omitempty"` //金币
	Gold int32 `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"` //钻石
}

func (x *Base_Backpack_MoneyInfo) Reset() {
	*x = Base_Backpack_MoneyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_MoneyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_MoneyInfo) ProtoMessage() {}

func (x *Base_Backpack_MoneyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_MoneyInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_MoneyInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{2}
}

func (x *Base_Backpack_MoneyInfo) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Base_Backpack_MoneyInfo) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

// 一个物品 Base_Backpack_ItemWrapper Base_Backpack_AnItemInfo
type Base_Backpack_AnItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                   //物品Id
	Num         int32  `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`                 //当前数量
	IsBind      bool   `protobuf:"varint,3,opt,name=IsBind,proto3" json:"IsBind,omitempty"`           //是否绑定
	HasParam    string `protobuf:"bytes,4,opt,name=HasParam,proto3" json:"HasParam,omitempty"`        //有参数
	InvalidTime int64  `protobuf:"varint,5,opt,name=InvalidTime,proto3" json:"InvalidTime,omitempty"` //无效时间
	GoldPrice   int32  `protobuf:"varint,6,opt,name=GoldPrice,proto3" json:"GoldPrice,omitempty"`     //金币价格
}

func (x *Base_Backpack_AnItemInfo) Reset() {
	*x = Base_Backpack_AnItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_AnItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_AnItemInfo) ProtoMessage() {}

func (x *Base_Backpack_AnItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_AnItemInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_AnItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{3}
}

func (x *Base_Backpack_AnItemInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetIsBind() bool {
	if x != nil {
		return x.IsBind
	}
	return false
}

func (x *Base_Backpack_AnItemInfo) GetHasParam() string {
	if x != nil {
		return x.HasParam
	}
	return ""
}

func (x *Base_Backpack_AnItemInfo) GetInvalidTime() int64 {
	if x != nil {
		return x.InvalidTime
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetGoldPrice() int32 {
	if x != nil {
		return x.GoldPrice
	}
	return 0
}

// 物品消费信息
type Base_Backpack_ItemConsumeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumeBindItemNum   int32 `protobuf:"varint,1,opt,name=ConsumeBindItemNum,proto3" json:"ConsumeBindItemNum,omitempty"`     //消耗绑定物品数量
	ConsumeNoBindItemNum int32 `protobuf:"varint,2,opt,name=ConsumeNoBindItemNum,proto3" json:"ConsumeNoBindItemNum,omitempty"` //消耗无绑定物品数量
	ConsumeNumList       int32 `protobuf:"varint,3,opt,name=ConsumeNumList,proto3" json:"ConsumeNumList,omitempty"`             //消耗数量
}

func (x *Base_Backpack_ItemConsumeInfo) Reset() {
	*x = Base_Backpack_ItemConsumeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_ItemConsumeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ItemConsumeInfo) ProtoMessage() {}

func (x *Base_Backpack_ItemConsumeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ItemConsumeInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ItemConsumeInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{4}
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeBindItemNum() int32 {
	if x != nil {
		return x.ConsumeBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeNoBindItemNum() int32 {
	if x != nil {
		return x.ConsumeNoBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeNumList() int32 {
	if x != nil {
		return x.ConsumeNumList
	}
	return 0
}

// 购买物品信息
type Base_Backpack_BuyItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId    int32 `protobuf:"varint,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`       //物品Id
	ItemCount int32 `protobuf:"varint,2,opt,name=ItemCount,proto3" json:"ItemCount,omitempty"` //物品数量
}

func (x *Base_Backpack_BuyItemInfo) Reset() {
	*x = Base_Backpack_BuyItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_BuyItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_BuyItemInfo) ProtoMessage() {}

func (x *Base_Backpack_BuyItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_BuyItemInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_BuyItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{5}
}

func (x *Base_Backpack_BuyItemInfo) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Base_Backpack_BuyItemInfo) GetItemCount() int32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

// 物品消耗清单
type Base_Backpack_ItemConsumeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindItemNum       int32                        `protobuf:"varint,1,opt,name=BindItemNum,proto3" json:"BindItemNum,omitempty"`             //绑定物品数量
	NoBindItemNum     int32                        `protobuf:"varint,2,opt,name=NoBindItemNum,proto3" json:"NoBindItemNum,omitempty"`         //不绑定物品数量
	NeedGoldNum       int32                        `protobuf:"varint,3,opt,name=NeedGoldNum,proto3" json:"NeedGoldNum,omitempty"`             //需要金币数量
	CostBindCoinFirst int32                        `protobuf:"varint,4,opt,name=CostBindCoinFirst,proto3" json:"CostBindCoinFirst,omitempty"` //首先花费绑定币
	Count             int32                        `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                         //数量
	IndexList         []int32                      `protobuf:"varint,6,rep,packed,name=IndexList,proto3" json:"IndexList,omitempty"`          //最大格子数格子位置 0:没有;1:有;
	NumList           []int32                      `protobuf:"varint,7,rep,packed,name=NumList,proto3" json:"NumList,omitempty"`              //需要扣除的数量
	BuyCount          int32                        `protobuf:"varint,8,opt,name=BuyCount,proto3" json:"BuyCount,omitempty"`                   //购买数量
	BuyItemInfo       []*Base_Backpack_BuyItemInfo `protobuf:"bytes,9,rep,name=BuyItemInfo,proto3" json:"BuyItemInfo,omitempty"`              //购买物品信息
}

func (x *Base_Backpack_ItemConsumeList) Reset() {
	*x = Base_Backpack_ItemConsumeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_ItemConsumeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ItemConsumeList) ProtoMessage() {}

func (x *Base_Backpack_ItemConsumeList) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ItemConsumeList.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ItemConsumeList) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{6}
}

func (x *Base_Backpack_ItemConsumeList) GetBindItemNum() int32 {
	if x != nil {
		return x.BindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetNoBindItemNum() int32 {
	if x != nil {
		return x.NoBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetNeedGoldNum() int32 {
	if x != nil {
		return x.NeedGoldNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetCostBindCoinFirst() int32 {
	if x != nil {
		return x.CostBindCoinFirst
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetIndexList() []int32 {
	if x != nil {
		return x.IndexList
	}
	return nil
}

func (x *Base_Backpack_ItemConsumeList) GetNumList() []int32 {
	if x != nil {
		return x.NumList
	}
	return nil
}

func (x *Base_Backpack_ItemConsumeList) GetBuyCount() int32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetBuyItemInfo() []*Base_Backpack_BuyItemInfo {
	if x != nil {
		return x.BuyItemInfo
	}
	return nil
}

// ------消息------------------------------------------------
// 获取玩家背包列表
type Net_Backpack_GetBackpackInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Backpack_GetBackpackInfoReq) Reset() {
	*x = Net_Backpack_GetBackpackInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_GetBackpackInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_GetBackpackInfoReq) ProtoMessage() {}

func (x *Net_Backpack_GetBackpackInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_GetBackpackInfoReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_GetBackpackInfoReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{7}
}

// 获取玩家背包列表
type Net_Backpack_GetBackpackInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackpackInfo *Base_Backpack_BackpackInfo `protobuf:"bytes,1,opt,name=BackpackInfo,proto3" json:"BackpackInfo,omitempty"` //
}

func (x *Net_Backpack_GetBackpackInfoRet) Reset() {
	*x = Net_Backpack_GetBackpackInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_GetBackpackInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_GetBackpackInfoRet) ProtoMessage() {}

func (x *Net_Backpack_GetBackpackInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_GetBackpackInfoRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_GetBackpackInfoRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{8}
}

func (x *Net_Backpack_GetBackpackInfoRet) GetBackpackInfo() *Base_Backpack_BackpackInfo {
	if x != nil {
		return x.BackpackInfo
	}
	return nil
}

// 背包更新
type Net_Backpack_BackpackUpdateRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelItems       int32           `protobuf:"varint,1,opt,name=DelItems,proto3" json:"DelItems,omitempty"`                                                                                                      //删除物品
	AddItems       int32           `protobuf:"varint,2,opt,name=AddItems,proto3" json:"AddItems,omitempty"`                                                                                                      //添加物品
	UpdateItems    int32           `protobuf:"varint,3,opt,name=UpdateItems,proto3" json:"UpdateItems,omitempty"`                                                                                                //更新物品
	UpdateItemList map[int32]int32 `protobuf:"bytes,4,rep,name=UpdateItemList,proto3" json:"UpdateItemList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //更新物品列表 添加物品 和删除物品
}

func (x *Net_Backpack_BackpackUpdateRet) Reset() {
	*x = Net_Backpack_BackpackUpdateRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_BackpackUpdateRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_BackpackUpdateRet) ProtoMessage() {}

func (x *Net_Backpack_BackpackUpdateRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_BackpackUpdateRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_BackpackUpdateRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{9}
}

func (x *Net_Backpack_BackpackUpdateRet) GetDelItems() int32 {
	if x != nil {
		return x.DelItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetAddItems() int32 {
	if x != nil {
		return x.AddItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetUpdateItems() int32 {
	if x != nil {
		return x.UpdateItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetUpdateItemList() map[int32]int32 {
	if x != nil {
		return x.UpdateItemList
	}
	return nil
}

// 玩家背包使用道具
type Net_Backpack_UseItemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int32 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"` //
}

func (x *Net_Backpack_UseItemsReq) Reset() {
	*x = Net_Backpack_UseItemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_UseItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_UseItemsReq) ProtoMessage() {}

func (x *Net_Backpack_UseItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_UseItemsReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_UseItemsReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{10}
}

func (x *Net_Backpack_UseItemsReq) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

// 玩家背包使用道具
type Net_Backpack_UseItemsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功;1:未知错误2:失败;
}

func (x *Net_Backpack_UseItemsRet) Reset() {
	*x = Net_Backpack_UseItemsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_UseItemsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_UseItemsRet) ProtoMessage() {}

func (x *Net_Backpack_UseItemsRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_UseItemsRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_UseItemsRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{11}
}

func (x *Net_Backpack_UseItemsRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// ===============================
// 背包格子信息
type Base_Backpack_CellInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opened int32 `protobuf:"varint,1,opt,name=Opened,proto3" json:"Opened,omitempty"` //已开启的格子数
	Used   int32 `protobuf:"varint,2,opt,name=Used,proto3" json:"Used,omitempty"`     //已使用的格子
	Unused int32 `protobuf:"varint,3,opt,name=Unused,proto3" json:"Unused,omitempty"` //未使用的格子
}

func (x *Base_Backpack_CellInfo) Reset() {
	*x = Base_Backpack_CellInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base_Backpack_CellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_CellInfo) ProtoMessage() {}

func (x *Base_Backpack_CellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_CellInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_CellInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{12}
}

func (x *Base_Backpack_CellInfo) GetOpened() int32 {
	if x != nil {
		return x.Opened
	}
	return 0
}

func (x *Base_Backpack_CellInfo) GetUsed() int32 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Base_Backpack_CellInfo) GetUnused() int32 {
	if x != nil {
		return x.Unused
	}
	return 0
}

// 开启格子
type Net_Backpack_OpenCellReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Backpack_OpenCellReq) Reset() {
	*x = Net_Backpack_OpenCellReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_OpenCellReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_OpenCellReq) ProtoMessage() {}

func (x *Net_Backpack_OpenCellReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_OpenCellReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_OpenCellReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{13}
}

type Net_Backpack_OpenCellRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Net_Backpack_OpenCellRet) Reset() {
	*x = Net_Backpack_OpenCellRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Net_Backpack_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net_Backpack_OpenCellRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_OpenCellRet) ProtoMessage() {}

func (x *Net_Backpack_OpenCellRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_OpenCellRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_OpenCellRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{14}
}

var File_Net_Backpack_proto protoreflect.FileDescriptor

var file_Net_Backpack_proto_rawDesc = []byte{
	0x0a, 0x12, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x50, 0x62, 0x22, 0xb3, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x73,
	0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b,
	0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3f, 0x0a,
	0x11, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa3,
	0x01, 0x0a, 0x27, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b,
	0x5f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x17, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63,
	0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x73, 0x65,
	0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x41, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x42, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x61, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x61, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x47, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x1d, 0x42,
	0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x19, 0x42, 0x61, 0x73, 0x65,
	0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x42, 0x75, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe2, 0x02, 0x0a, 0x1d,
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12,
	0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4e, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x65, 0x64, 0x47, 0x6f, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x65, 0x65, 0x64,
	0x47, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x6f, 0x73, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x43, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x75, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x4e, 0x75, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3f, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x42,
	0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x42, 0x75, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x42, 0x75, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x21, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x22, 0x65, 0x0a, 0x1f, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f,
	0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x42, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x1e, 0x4e,
	0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x42, 0x61, 0x63, 0x6b,
	0x70, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x50, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63,
	0x6b, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x41, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x18, 0x4e, 0x65,
	0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x55, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x2c,
	0x0a, 0x18, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x55,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x22, 0x5c, 0x0a, 0x16,
	0x42, 0x61, 0x73, 0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x43, 0x65,
	0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x4e, 0x65,
	0x74, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x1a, 0x0a, 0x18, 0x4e, 0x65, 0x74, 0x5f, 0x42, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x65, 0x6c, 0x6c, 0x52,
	0x65, 0x74, 0x2a, 0x82, 0x01, 0x0a, 0x09, 0x45, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x42, 0x61, 0x63, 0x6b,
	0x70, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x74, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x47, 0x72,
	0x69, 0x64, 0x4e, 0x75, 0x6d, 0x10, 0x64, 0x2a, 0x49, 0x0a, 0x06, 0x45, 0x42, 0x61, 0x67, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x42, 0x61, 0x67, 0x49, 0x64, 0x49, 0x64, 0x6c, 0x65, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x42, 0x61, 0x67, 0x49, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x10,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x42, 0x61, 0x67, 0x49, 0x64, 0x50, 0x65, 0x74, 0x10, 0x66,
	0x12, 0x10, 0x0a, 0x0b, 0x45, 0x42, 0x61, 0x67, 0x49, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x10,
	0xc9, 0x01, 0x2a, 0x68, 0x0a, 0x07, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x10, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x6c,
	0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x10, 0xe9, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x10, 0xea, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x48, 0x6f, 0x6c, 0x79, 0x47, 0x72, 0x61,
	0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x10, 0xd1, 0x0f, 0x12, 0x0f, 0x0a, 0x0a, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x34, 0x30, 0x30, 0x32, 0x10, 0xa2, 0x1f, 0x2a, 0x4e, 0x0a, 0x0e,
	0x45, 0x50, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4e, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x4d, 0x10, 0x02, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Net_Backpack_proto_rawDescOnce sync.Once
	file_Net_Backpack_proto_rawDescData = file_Net_Backpack_proto_rawDesc
)

func file_Net_Backpack_proto_rawDescGZIP() []byte {
	file_Net_Backpack_proto_rawDescOnce.Do(func() {
		file_Net_Backpack_proto_rawDescData = protoimpl.X.CompressGZIP(file_Net_Backpack_proto_rawDescData)
	})
	return file_Net_Backpack_proto_rawDescData
}

var file_Net_Backpack_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_Net_Backpack_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_Net_Backpack_proto_goTypes = []interface{}{
	(EBackpack)(0),                     // 0: Pb.EBackpack
	(EBagId)(0),                        // 1: Pb.EBagId
	(EItemId)(0),                       // 2: Pb.EItemId
	(EPutReasonType)(0),                // 3: Pb.EPutReasonType
	(*Base_Backpack_BackpackInfo)(nil), // 4: Pb.Base_Backpack_BackpackInfo
	(*Base_Backpack_ConsumeOperationOrderInfo)(nil), // 5: Pb.Base_Backpack_ConsumeOperationOrderInfo
	(*Base_Backpack_MoneyInfo)(nil),                 // 6: Pb.Base_Backpack_MoneyInfo
	(*Base_Backpack_AnItemInfo)(nil),                // 7: Pb.Base_Backpack_AnItemInfo
	(*Base_Backpack_ItemConsumeInfo)(nil),           // 8: Pb.Base_Backpack_ItemConsumeInfo
	(*Base_Backpack_BuyItemInfo)(nil),               // 9: Pb.Base_Backpack_BuyItemInfo
	(*Base_Backpack_ItemConsumeList)(nil),           // 10: Pb.Base_Backpack_ItemConsumeList
	(*Net_Backpack_GetBackpackInfoReq)(nil),         // 11: Pb.Net_Backpack_GetBackpackInfoReq
	(*Net_Backpack_GetBackpackInfoRet)(nil),         // 12: Pb.Net_Backpack_GetBackpackInfoRet
	(*Net_Backpack_BackpackUpdateRet)(nil),          // 13: Pb.Net_Backpack_BackpackUpdateRet
	(*Net_Backpack_UseItemsReq)(nil),                // 14: Pb.Net_Backpack_UseItemsReq
	(*Net_Backpack_UseItemsRet)(nil),                // 15: Pb.Net_Backpack_UseItemsRet
	(*Base_Backpack_CellInfo)(nil),                  // 16: Pb.Base_Backpack_CellInfo
	(*Net_Backpack_OpenCellReq)(nil),                // 17: Pb.Net_Backpack_OpenCellReq
	(*Net_Backpack_OpenCellRet)(nil),                // 18: Pb.Net_Backpack_OpenCellRet
	nil,                                             // 19: Pb.Base_Backpack_BackpackInfo.ItemInfoListEntry
	nil,                                             // 20: Pb.Net_Backpack_BackpackUpdateRet.UpdateItemListEntry
}
var file_Net_Backpack_proto_depIdxs = []int32{
	19, // 0: Pb.Base_Backpack_BackpackInfo.ItemInfoList:type_name -> Pb.Base_Backpack_BackpackInfo.ItemInfoListEntry
	9,  // 1: Pb.Base_Backpack_ItemConsumeList.BuyItemInfo:type_name -> Pb.Base_Backpack_BuyItemInfo
	4,  // 2: Pb.Net_Backpack_GetBackpackInfoRet.BackpackInfo:type_name -> Pb.Base_Backpack_BackpackInfo
	20, // 3: Pb.Net_Backpack_BackpackUpdateRet.UpdateItemList:type_name -> Pb.Net_Backpack_BackpackUpdateRet.UpdateItemListEntry
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_Net_Backpack_proto_init() }
func file_Net_Backpack_proto_init() {
	if File_Net_Backpack_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Net_Backpack_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_BackpackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_ConsumeOperationOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_MoneyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_AnItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_ItemConsumeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_BuyItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_ItemConsumeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_GetBackpackInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_GetBackpackInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_BackpackUpdateRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_UseItemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_UseItemsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base_Backpack_CellInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_OpenCellReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Net_Backpack_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net_Backpack_OpenCellRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Net_Backpack_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_Backpack_proto_goTypes,
		DependencyIndexes: file_Net_Backpack_proto_depIdxs,
		EnumInfos:         file_Net_Backpack_proto_enumTypes,
		MessageInfos:      file_Net_Backpack_proto_msgTypes,
	}.Build()
	File_Net_Backpack_proto = out.File
	file_Net_Backpack_proto_rawDesc = nil
	file_Net_Backpack_proto_goTypes = nil
	file_Net_Backpack_proto_depIdxs = nil
}
