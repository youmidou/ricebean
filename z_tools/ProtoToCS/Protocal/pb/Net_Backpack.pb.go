// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.1
// source: Net_Backpack.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 背包类型
type EBackpack int32

const (
	EBackpack_EBackpackTypeIdle   EBackpack = 0   //空置占位没用
	EBackpack_EBackpackTypeItem   EBackpack = 1   //物品背包
	EBackpack_EBackpackTypeDepot  EBackpack = 2   //仓库
	EBackpack_EBackpackTypeDummy  EBackpack = 3   //虚拟背包
	EBackpack_EBackpackMaxGridNum EBackpack = 100 //最大背包格子数
)

// Enum value maps for EBackpack.
var (
	EBackpack_name = map[int32]string{
		0:   "EBackpackTypeIdle",
		1:   "EBackpackTypeItem",
		2:   "EBackpackTypeDepot",
		3:   "EBackpackTypeDummy",
		100: "EBackpackMaxGridNum",
	}
	EBackpack_value = map[string]int32{
		"EBackpackTypeIdle":   0,
		"EBackpackTypeItem":   1,
		"EBackpackTypeDepot":  2,
		"EBackpackTypeDummy":  3,
		"EBackpackMaxGridNum": 100,
	}
)

func (x EBackpack) Enum() *EBackpack {
	p := new(EBackpack)
	*p = x
	return p
}

func (x EBackpack) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBackpack) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[0].Descriptor()
}

func (EBackpack) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[0]
}

func (x EBackpack) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBackpack.Descriptor instead.
func (EBackpack) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{0}
}

// 背包类型
type EBagId int32

const (
	EBagId_EBagIdIdle  EBagId = 0   //空置占位没用
	EBagId_EBagIdMain  EBagId = 101 //主背包
	EBagId_EBagIdPet   EBagId = 102 //宠物背包
	EBagId_EBagIdDepot EBagId = 201 //主仓库
)

// Enum value maps for EBagId.
var (
	EBagId_name = map[int32]string{
		0:   "EBagIdIdle",
		101: "EBagIdMain",
		102: "EBagIdPet",
		201: "EBagIdDepot",
	}
	EBagId_value = map[string]int32{
		"EBagIdIdle":  0,
		"EBagIdMain":  101,
		"EBagIdPet":   102,
		"EBagIdDepot": 201,
	}
)

func (x EBagId) Enum() *EBagId {
	p := new(EBagId)
	*p = x
	return p
}

func (x EBagId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBagId) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[1].Descriptor()
}

func (EBagId) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[1]
}

func (x EBagId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBagId.Descriptor instead.
func (EBagId) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{1}
}

// 货币Currency BackpackItems
type EItemId int32

const (
	EItemId_BackpackItemIdle EItemId = 0    //空置占位没用
	EItemId_CoinItemId       EItemId = 1001 //金币
	EItemId_GoldItemId       EItemId = 1002 //钻石
	EItemId_HolyGrailItemId  EItemId = 2001 //奖杯积分
	EItemId_ItemId4002       EItemId = 4002 //通行证积分
)

// Enum value maps for EItemId.
var (
	EItemId_name = map[int32]string{
		0:    "BackpackItemIdle",
		1001: "CoinItemId",
		1002: "GoldItemId",
		2001: "HolyGrailItemId",
		4002: "ItemId4002",
	}
	EItemId_value = map[string]int32{
		"BackpackItemIdle": 0,
		"CoinItemId":       1001,
		"GoldItemId":       1002,
		"HolyGrailItemId":  2001,
		"ItemId4002":       4002,
	}
)

func (x EItemId) Enum() *EItemId {
	p := new(EItemId)
	*p = x
	return p
}

func (x EItemId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemId) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[2].Descriptor()
}

func (EItemId) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[2]
}

func (x EItemId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EItemId.Descriptor instead.
func (EItemId) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{2}
}

// 放置原因类型
type EPutReasonType int32

const (
	EPutReasonType_PutReasonInvalid  EPutReasonType = 0 //放置原因无效
	EPutReasonType_PutReasonNoNotice EPutReasonType = 1 //放置原因无通知
	EPutReasonType_PutReasonGM       EPutReasonType = 2 //GM
)

// Enum value maps for EPutReasonType.
var (
	EPutReasonType_name = map[int32]string{
		0: "PutReasonInvalid",
		1: "PutReasonNoNotice",
		2: "PutReasonGM",
	}
	EPutReasonType_value = map[string]int32{
		"PutReasonInvalid":  0,
		"PutReasonNoNotice": 1,
		"PutReasonGM":       2,
	}
)

func (x EPutReasonType) Enum() *EPutReasonType {
	p := new(EPutReasonType)
	*p = x
	return p
}

func (x EPutReasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPutReasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_Net_Backpack_proto_enumTypes[3].Descriptor()
}

func (EPutReasonType) Type() protoreflect.EnumType {
	return &file_Net_Backpack_proto_enumTypes[3]
}

func (x EPutReasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPutReasonType.Descriptor instead.
func (EPutReasonType) EnumDescriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{3}
}

// 背包信息
type Base_Backpack_BackpackInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemInfoList  map[int32]int32        `protobuf:"bytes,1,rep,name=ItemInfoList,proto3" json:"ItemInfoList,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` //物品列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_Backpack_BackpackInfo) Reset() {
	*x = Base_Backpack_BackpackInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_BackpackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_BackpackInfo) ProtoMessage() {}

func (x *Base_Backpack_BackpackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_BackpackInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_BackpackInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{0}
}

func (x *Base_Backpack_BackpackInfo) GetItemInfoList() map[int32]int32 {
	if x != nil {
		return x.ItemInfoList
	}
	return nil
}

// 一个消耗订单
type Base_Backpack_ConsumeOperationOrderInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationType int32                  `protobuf:"varint,1,opt,name=OperationType,proto3" json:"OperationType,omitempty"` //操作类型
	// Base_Backpack_MoneyInfo ConsumeMoney =2;//消耗的Money
	ConsumeItemList int32 `protobuf:"varint,3,opt,name=ConsumeItemList,proto3" json:"ConsumeItemList,omitempty"` //消耗的物品列表
	// Base_Backpack_MoneyInfo AcquireMoney=4;//获得物品列表
	AcquireItemList int32 `protobuf:"varint,5,opt,name=AcquireItemList,proto3" json:"AcquireItemList,omitempty"` //获得物品列表
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) Reset() {
	*x = Base_Backpack_ConsumeOperationOrderInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ConsumeOperationOrderInfo) ProtoMessage() {}

func (x *Base_Backpack_ConsumeOperationOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ConsumeOperationOrderInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ConsumeOperationOrderInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{1}
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetConsumeItemList() int32 {
	if x != nil {
		return x.ConsumeItemList
	}
	return 0
}

func (x *Base_Backpack_ConsumeOperationOrderInfo) GetAcquireItemList() int32 {
	if x != nil {
		return x.AcquireItemList
	}
	return 0
}

// 金钱
type Base_Backpack_MoneyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coin          int32                  `protobuf:"varint,1,opt,name=Coin,proto3" json:"Coin,omitempty"` //金币
	Gold          int32                  `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"` //钻石
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_Backpack_MoneyInfo) Reset() {
	*x = Base_Backpack_MoneyInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_MoneyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_MoneyInfo) ProtoMessage() {}

func (x *Base_Backpack_MoneyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_MoneyInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_MoneyInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{2}
}

func (x *Base_Backpack_MoneyInfo) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Base_Backpack_MoneyInfo) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

// 一个物品 Base_Backpack_ItemWrapper Base_Backpack_AnItemInfo
type Base_Backpack_AnItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                   //物品Id
	Num           int32                  `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`                 //当前数量
	IsBind        bool                   `protobuf:"varint,3,opt,name=IsBind,proto3" json:"IsBind,omitempty"`           //是否绑定
	HasParam      string                 `protobuf:"bytes,4,opt,name=HasParam,proto3" json:"HasParam,omitempty"`        //有参数
	InvalidTime   int64                  `protobuf:"varint,5,opt,name=InvalidTime,proto3" json:"InvalidTime,omitempty"` //无效时间
	GoldPrice     int32                  `protobuf:"varint,6,opt,name=GoldPrice,proto3" json:"GoldPrice,omitempty"`     //金币价格
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_Backpack_AnItemInfo) Reset() {
	*x = Base_Backpack_AnItemInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_AnItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_AnItemInfo) ProtoMessage() {}

func (x *Base_Backpack_AnItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_AnItemInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_AnItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{3}
}

func (x *Base_Backpack_AnItemInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetIsBind() bool {
	if x != nil {
		return x.IsBind
	}
	return false
}

func (x *Base_Backpack_AnItemInfo) GetHasParam() string {
	if x != nil {
		return x.HasParam
	}
	return ""
}

func (x *Base_Backpack_AnItemInfo) GetInvalidTime() int64 {
	if x != nil {
		return x.InvalidTime
	}
	return 0
}

func (x *Base_Backpack_AnItemInfo) GetGoldPrice() int32 {
	if x != nil {
		return x.GoldPrice
	}
	return 0
}

// 物品消费信息
type Base_Backpack_ItemConsumeInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ConsumeBindItemNum   int32                  `protobuf:"varint,1,opt,name=ConsumeBindItemNum,proto3" json:"ConsumeBindItemNum,omitempty"`     //消耗绑定物品数量
	ConsumeNoBindItemNum int32                  `protobuf:"varint,2,opt,name=ConsumeNoBindItemNum,proto3" json:"ConsumeNoBindItemNum,omitempty"` //消耗无绑定物品数量
	ConsumeNumList       int32                  `protobuf:"varint,3,opt,name=ConsumeNumList,proto3" json:"ConsumeNumList,omitempty"`             //消耗数量
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Base_Backpack_ItemConsumeInfo) Reset() {
	*x = Base_Backpack_ItemConsumeInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_ItemConsumeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ItemConsumeInfo) ProtoMessage() {}

func (x *Base_Backpack_ItemConsumeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ItemConsumeInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ItemConsumeInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{4}
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeBindItemNum() int32 {
	if x != nil {
		return x.ConsumeBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeNoBindItemNum() int32 {
	if x != nil {
		return x.ConsumeNoBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeInfo) GetConsumeNumList() int32 {
	if x != nil {
		return x.ConsumeNumList
	}
	return 0
}

// 购买物品信息
type Base_Backpack_BuyItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`       //物品Id
	ItemCount     int32                  `protobuf:"varint,2,opt,name=ItemCount,proto3" json:"ItemCount,omitempty"` //物品数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_Backpack_BuyItemInfo) Reset() {
	*x = Base_Backpack_BuyItemInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_BuyItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_BuyItemInfo) ProtoMessage() {}

func (x *Base_Backpack_BuyItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_BuyItemInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_BuyItemInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{5}
}

func (x *Base_Backpack_BuyItemInfo) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Base_Backpack_BuyItemInfo) GetItemCount() int32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

// 物品消耗清单
type Base_Backpack_ItemConsumeList struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	BindItemNum       int32                        `protobuf:"varint,1,opt,name=BindItemNum,proto3" json:"BindItemNum,omitempty"`             //绑定物品数量
	NoBindItemNum     int32                        `protobuf:"varint,2,opt,name=NoBindItemNum,proto3" json:"NoBindItemNum,omitempty"`         //不绑定物品数量
	NeedGoldNum       int32                        `protobuf:"varint,3,opt,name=NeedGoldNum,proto3" json:"NeedGoldNum,omitempty"`             //需要金币数量
	CostBindCoinFirst int32                        `protobuf:"varint,4,opt,name=CostBindCoinFirst,proto3" json:"CostBindCoinFirst,omitempty"` //首先花费绑定币
	Count             int32                        `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`                         //数量
	IndexList         []int32                      `protobuf:"varint,6,rep,packed,name=IndexList,proto3" json:"IndexList,omitempty"`          //最大格子数格子位置 0:没有;1:有;
	NumList           []int32                      `protobuf:"varint,7,rep,packed,name=NumList,proto3" json:"NumList,omitempty"`              //需要扣除的数量
	BuyCount          int32                        `protobuf:"varint,8,opt,name=BuyCount,proto3" json:"BuyCount,omitempty"`                   //购买数量
	BuyItemInfo       []*Base_Backpack_BuyItemInfo `protobuf:"bytes,9,rep,name=BuyItemInfo,proto3" json:"BuyItemInfo,omitempty"`              //购买物品信息
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Base_Backpack_ItemConsumeList) Reset() {
	*x = Base_Backpack_ItemConsumeList{}
	mi := &file_Net_Backpack_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_ItemConsumeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_ItemConsumeList) ProtoMessage() {}

func (x *Base_Backpack_ItemConsumeList) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_ItemConsumeList.ProtoReflect.Descriptor instead.
func (*Base_Backpack_ItemConsumeList) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{6}
}

func (x *Base_Backpack_ItemConsumeList) GetBindItemNum() int32 {
	if x != nil {
		return x.BindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetNoBindItemNum() int32 {
	if x != nil {
		return x.NoBindItemNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetNeedGoldNum() int32 {
	if x != nil {
		return x.NeedGoldNum
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetCostBindCoinFirst() int32 {
	if x != nil {
		return x.CostBindCoinFirst
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetIndexList() []int32 {
	if x != nil {
		return x.IndexList
	}
	return nil
}

func (x *Base_Backpack_ItemConsumeList) GetNumList() []int32 {
	if x != nil {
		return x.NumList
	}
	return nil
}

func (x *Base_Backpack_ItemConsumeList) GetBuyCount() int32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *Base_Backpack_ItemConsumeList) GetBuyItemInfo() []*Base_Backpack_BuyItemInfo {
	if x != nil {
		return x.BuyItemInfo
	}
	return nil
}

// ------消息------------------------------------------------
// 获取玩家背包列表
type Net_Backpack_GetBackpackInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_GetBackpackInfoReq) Reset() {
	*x = Net_Backpack_GetBackpackInfoReq{}
	mi := &file_Net_Backpack_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_GetBackpackInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_GetBackpackInfoReq) ProtoMessage() {}

func (x *Net_Backpack_GetBackpackInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_GetBackpackInfoReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_GetBackpackInfoReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{7}
}

// 获取玩家背包列表
type Net_Backpack_GetBackpackInfoRet struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	BackpackInfo  *Base_Backpack_BackpackInfo `protobuf:"bytes,1,opt,name=BackpackInfo,proto3" json:"BackpackInfo,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_GetBackpackInfoRet) Reset() {
	*x = Net_Backpack_GetBackpackInfoRet{}
	mi := &file_Net_Backpack_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_GetBackpackInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_GetBackpackInfoRet) ProtoMessage() {}

func (x *Net_Backpack_GetBackpackInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_GetBackpackInfoRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_GetBackpackInfoRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{8}
}

func (x *Net_Backpack_GetBackpackInfoRet) GetBackpackInfo() *Base_Backpack_BackpackInfo {
	if x != nil {
		return x.BackpackInfo
	}
	return nil
}

// 背包更新
type Net_Backpack_BackpackUpdateRet struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DelItems       int32                  `protobuf:"varint,1,opt,name=DelItems,proto3" json:"DelItems,omitempty"`                                                                                        //删除物品
	AddItems       int32                  `protobuf:"varint,2,opt,name=AddItems,proto3" json:"AddItems,omitempty"`                                                                                        //添加物品
	UpdateItems    int32                  `protobuf:"varint,3,opt,name=UpdateItems,proto3" json:"UpdateItems,omitempty"`                                                                                  //更新物品
	UpdateItemList map[int32]int32        `protobuf:"bytes,4,rep,name=UpdateItemList,proto3" json:"UpdateItemList,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` //更新物品列表 添加物品 和删除物品
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Net_Backpack_BackpackUpdateRet) Reset() {
	*x = Net_Backpack_BackpackUpdateRet{}
	mi := &file_Net_Backpack_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_BackpackUpdateRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_BackpackUpdateRet) ProtoMessage() {}

func (x *Net_Backpack_BackpackUpdateRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_BackpackUpdateRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_BackpackUpdateRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{9}
}

func (x *Net_Backpack_BackpackUpdateRet) GetDelItems() int32 {
	if x != nil {
		return x.DelItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetAddItems() int32 {
	if x != nil {
		return x.AddItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetUpdateItems() int32 {
	if x != nil {
		return x.UpdateItems
	}
	return 0
}

func (x *Net_Backpack_BackpackUpdateRet) GetUpdateItemList() map[int32]int32 {
	if x != nil {
		return x.UpdateItemList
	}
	return nil
}

// 玩家背包使用道具
type Net_Backpack_UseItemsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_UseItemsReq) Reset() {
	*x = Net_Backpack_UseItemsReq{}
	mi := &file_Net_Backpack_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_UseItemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_UseItemsReq) ProtoMessage() {}

func (x *Net_Backpack_UseItemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_UseItemsReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_UseItemsReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{10}
}

func (x *Net_Backpack_UseItemsReq) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

// 玩家背包使用道具
type Net_Backpack_UseItemsRet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           int32                  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"` //0:成功;1:未知错误2:失败;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_UseItemsRet) Reset() {
	*x = Net_Backpack_UseItemsRet{}
	mi := &file_Net_Backpack_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_UseItemsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_UseItemsRet) ProtoMessage() {}

func (x *Net_Backpack_UseItemsRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_UseItemsRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_UseItemsRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{11}
}

func (x *Net_Backpack_UseItemsRet) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// ===============================
// 背包格子信息
type Base_Backpack_CellInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Opened        int32                  `protobuf:"varint,1,opt,name=Opened,proto3" json:"Opened,omitempty"` //已开启的格子数
	Used          int32                  `protobuf:"varint,2,opt,name=Used,proto3" json:"Used,omitempty"`     //已使用的格子
	Unused        int32                  `protobuf:"varint,3,opt,name=Unused,proto3" json:"Unused,omitempty"` //未使用的格子
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Base_Backpack_CellInfo) Reset() {
	*x = Base_Backpack_CellInfo{}
	mi := &file_Net_Backpack_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base_Backpack_CellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base_Backpack_CellInfo) ProtoMessage() {}

func (x *Base_Backpack_CellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base_Backpack_CellInfo.ProtoReflect.Descriptor instead.
func (*Base_Backpack_CellInfo) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{12}
}

func (x *Base_Backpack_CellInfo) GetOpened() int32 {
	if x != nil {
		return x.Opened
	}
	return 0
}

func (x *Base_Backpack_CellInfo) GetUsed() int32 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Base_Backpack_CellInfo) GetUnused() int32 {
	if x != nil {
		return x.Unused
	}
	return 0
}

// 开启格子
type Net_Backpack_OpenCellReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_OpenCellReq) Reset() {
	*x = Net_Backpack_OpenCellReq{}
	mi := &file_Net_Backpack_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_OpenCellReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_OpenCellReq) ProtoMessage() {}

func (x *Net_Backpack_OpenCellReq) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_OpenCellReq.ProtoReflect.Descriptor instead.
func (*Net_Backpack_OpenCellReq) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{13}
}

type Net_Backpack_OpenCellRet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net_Backpack_OpenCellRet) Reset() {
	*x = Net_Backpack_OpenCellRet{}
	mi := &file_Net_Backpack_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net_Backpack_OpenCellRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net_Backpack_OpenCellRet) ProtoMessage() {}

func (x *Net_Backpack_OpenCellRet) ProtoReflect() protoreflect.Message {
	mi := &file_Net_Backpack_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net_Backpack_OpenCellRet.ProtoReflect.Descriptor instead.
func (*Net_Backpack_OpenCellRet) Descriptor() ([]byte, []int) {
	return file_Net_Backpack_proto_rawDescGZIP(), []int{14}
}

var File_Net_Backpack_proto protoreflect.FileDescriptor

const file_Net_Backpack_proto_rawDesc = "" +
	"\n" +
	"\x12Net_Backpack.proto\x12\x02Pb\"\xb3\x01\n" +
	"\x1aBase_Backpack_BackpackInfo\x12T\n" +
	"\fItemInfoList\x18\x01 \x03(\v20.Pb.Base_Backpack_BackpackInfo.ItemInfoListEntryR\fItemInfoList\x1a?\n" +
	"\x11ItemInfoListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xa3\x01\n" +
	"'Base_Backpack_ConsumeOperationOrderInfo\x12$\n" +
	"\rOperationType\x18\x01 \x01(\x05R\rOperationType\x12(\n" +
	"\x0fConsumeItemList\x18\x03 \x01(\x05R\x0fConsumeItemList\x12(\n" +
	"\x0fAcquireItemList\x18\x05 \x01(\x05R\x0fAcquireItemList\"A\n" +
	"\x17Base_Backpack_MoneyInfo\x12\x12\n" +
	"\x04Coin\x18\x01 \x01(\x05R\x04Coin\x12\x12\n" +
	"\x04Gold\x18\x02 \x01(\x05R\x04Gold\"\xb0\x01\n" +
	"\x18Base_Backpack_AnItemInfo\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x05R\x02Id\x12\x10\n" +
	"\x03Num\x18\x02 \x01(\x05R\x03Num\x12\x16\n" +
	"\x06IsBind\x18\x03 \x01(\bR\x06IsBind\x12\x1a\n" +
	"\bHasParam\x18\x04 \x01(\tR\bHasParam\x12 \n" +
	"\vInvalidTime\x18\x05 \x01(\x03R\vInvalidTime\x12\x1c\n" +
	"\tGoldPrice\x18\x06 \x01(\x05R\tGoldPrice\"\xab\x01\n" +
	"\x1dBase_Backpack_ItemConsumeInfo\x12.\n" +
	"\x12ConsumeBindItemNum\x18\x01 \x01(\x05R\x12ConsumeBindItemNum\x122\n" +
	"\x14ConsumeNoBindItemNum\x18\x02 \x01(\x05R\x14ConsumeNoBindItemNum\x12&\n" +
	"\x0eConsumeNumList\x18\x03 \x01(\x05R\x0eConsumeNumList\"Q\n" +
	"\x19Base_Backpack_BuyItemInfo\x12\x16\n" +
	"\x06ItemId\x18\x01 \x01(\x05R\x06ItemId\x12\x1c\n" +
	"\tItemCount\x18\x02 \x01(\x05R\tItemCount\"\xe2\x02\n" +
	"\x1dBase_Backpack_ItemConsumeList\x12 \n" +
	"\vBindItemNum\x18\x01 \x01(\x05R\vBindItemNum\x12$\n" +
	"\rNoBindItemNum\x18\x02 \x01(\x05R\rNoBindItemNum\x12 \n" +
	"\vNeedGoldNum\x18\x03 \x01(\x05R\vNeedGoldNum\x12,\n" +
	"\x11CostBindCoinFirst\x18\x04 \x01(\x05R\x11CostBindCoinFirst\x12\x14\n" +
	"\x05Count\x18\x05 \x01(\x05R\x05Count\x12\x1c\n" +
	"\tIndexList\x18\x06 \x03(\x05R\tIndexList\x12\x18\n" +
	"\aNumList\x18\a \x03(\x05R\aNumList\x12\x1a\n" +
	"\bBuyCount\x18\b \x01(\x05R\bBuyCount\x12?\n" +
	"\vBuyItemInfo\x18\t \x03(\v2\x1d.Pb.Base_Backpack_BuyItemInfoR\vBuyItemInfo\"!\n" +
	"\x1fNet_Backpack_GetBackpackInfoReq\"e\n" +
	"\x1fNet_Backpack_GetBackpackInfoRet\x12B\n" +
	"\fBackpackInfo\x18\x01 \x01(\v2\x1e.Pb.Base_Backpack_BackpackInfoR\fBackpackInfo\"\x9d\x02\n" +
	"\x1eNet_Backpack_BackpackUpdateRet\x12\x1a\n" +
	"\bDelItems\x18\x01 \x01(\x05R\bDelItems\x12\x1a\n" +
	"\bAddItems\x18\x02 \x01(\x05R\bAddItems\x12 \n" +
	"\vUpdateItems\x18\x03 \x01(\x05R\vUpdateItems\x12^\n" +
	"\x0eUpdateItemList\x18\x04 \x03(\v26.Pb.Net_Backpack_BackpackUpdateRet.UpdateItemListEntryR\x0eUpdateItemList\x1aA\n" +
	"\x13UpdateItemListEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"2\n" +
	"\x18Net_Backpack_UseItemsReq\x12\x16\n" +
	"\x06itemId\x18\x01 \x01(\x05R\x06itemId\",\n" +
	"\x18Net_Backpack_UseItemsRet\x12\x10\n" +
	"\x03Ret\x18\x01 \x01(\x05R\x03Ret\"\\\n" +
	"\x16Base_Backpack_CellInfo\x12\x16\n" +
	"\x06Opened\x18\x01 \x01(\x05R\x06Opened\x12\x12\n" +
	"\x04Used\x18\x02 \x01(\x05R\x04Used\x12\x16\n" +
	"\x06Unused\x18\x03 \x01(\x05R\x06Unused\"\x1a\n" +
	"\x18Net_Backpack_OpenCellReq\"\x1a\n" +
	"\x18Net_Backpack_OpenCellRet*\x82\x01\n" +
	"\tEBackpack\x12\x15\n" +
	"\x11EBackpackTypeIdle\x10\x00\x12\x15\n" +
	"\x11EBackpackTypeItem\x10\x01\x12\x16\n" +
	"\x12EBackpackTypeDepot\x10\x02\x12\x16\n" +
	"\x12EBackpackTypeDummy\x10\x03\x12\x17\n" +
	"\x13EBackpackMaxGridNum\x10d*I\n" +
	"\x06EBagId\x12\x0e\n" +
	"\n" +
	"EBagIdIdle\x10\x00\x12\x0e\n" +
	"\n" +
	"EBagIdMain\x10e\x12\r\n" +
	"\tEBagIdPet\x10f\x12\x10\n" +
	"\vEBagIdDepot\x10\xc9\x01*h\n" +
	"\aEItemId\x12\x14\n" +
	"\x10BackpackItemIdle\x10\x00\x12\x0f\n" +
	"\n" +
	"CoinItemId\x10\xe9\a\x12\x0f\n" +
	"\n" +
	"GoldItemId\x10\xea\a\x12\x14\n" +
	"\x0fHolyGrailItemId\x10\xd1\x0f\x12\x0f\n" +
	"\n" +
	"ItemId4002\x10\xa2\x1f*N\n" +
	"\x0eEPutReasonType\x12\x14\n" +
	"\x10PutReasonInvalid\x10\x00\x12\x15\n" +
	"\x11PutReasonNoNotice\x10\x01\x12\x0f\n" +
	"\vPutReasonGM\x10\x02B\x06Z\x04./pbb\x06proto3"

var (
	file_Net_Backpack_proto_rawDescOnce sync.Once
	file_Net_Backpack_proto_rawDescData []byte
)

func file_Net_Backpack_proto_rawDescGZIP() []byte {
	file_Net_Backpack_proto_rawDescOnce.Do(func() {
		file_Net_Backpack_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Net_Backpack_proto_rawDesc), len(file_Net_Backpack_proto_rawDesc)))
	})
	return file_Net_Backpack_proto_rawDescData
}

var file_Net_Backpack_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_Net_Backpack_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_Net_Backpack_proto_goTypes = []any{
	(EBackpack)(0),                     // 0: Pb.EBackpack
	(EBagId)(0),                        // 1: Pb.EBagId
	(EItemId)(0),                       // 2: Pb.EItemId
	(EPutReasonType)(0),                // 3: Pb.EPutReasonType
	(*Base_Backpack_BackpackInfo)(nil), // 4: Pb.Base_Backpack_BackpackInfo
	(*Base_Backpack_ConsumeOperationOrderInfo)(nil), // 5: Pb.Base_Backpack_ConsumeOperationOrderInfo
	(*Base_Backpack_MoneyInfo)(nil),                 // 6: Pb.Base_Backpack_MoneyInfo
	(*Base_Backpack_AnItemInfo)(nil),                // 7: Pb.Base_Backpack_AnItemInfo
	(*Base_Backpack_ItemConsumeInfo)(nil),           // 8: Pb.Base_Backpack_ItemConsumeInfo
	(*Base_Backpack_BuyItemInfo)(nil),               // 9: Pb.Base_Backpack_BuyItemInfo
	(*Base_Backpack_ItemConsumeList)(nil),           // 10: Pb.Base_Backpack_ItemConsumeList
	(*Net_Backpack_GetBackpackInfoReq)(nil),         // 11: Pb.Net_Backpack_GetBackpackInfoReq
	(*Net_Backpack_GetBackpackInfoRet)(nil),         // 12: Pb.Net_Backpack_GetBackpackInfoRet
	(*Net_Backpack_BackpackUpdateRet)(nil),          // 13: Pb.Net_Backpack_BackpackUpdateRet
	(*Net_Backpack_UseItemsReq)(nil),                // 14: Pb.Net_Backpack_UseItemsReq
	(*Net_Backpack_UseItemsRet)(nil),                // 15: Pb.Net_Backpack_UseItemsRet
	(*Base_Backpack_CellInfo)(nil),                  // 16: Pb.Base_Backpack_CellInfo
	(*Net_Backpack_OpenCellReq)(nil),                // 17: Pb.Net_Backpack_OpenCellReq
	(*Net_Backpack_OpenCellRet)(nil),                // 18: Pb.Net_Backpack_OpenCellRet
	nil,                                             // 19: Pb.Base_Backpack_BackpackInfo.ItemInfoListEntry
	nil,                                             // 20: Pb.Net_Backpack_BackpackUpdateRet.UpdateItemListEntry
}
var file_Net_Backpack_proto_depIdxs = []int32{
	19, // 0: Pb.Base_Backpack_BackpackInfo.ItemInfoList:type_name -> Pb.Base_Backpack_BackpackInfo.ItemInfoListEntry
	9,  // 1: Pb.Base_Backpack_ItemConsumeList.BuyItemInfo:type_name -> Pb.Base_Backpack_BuyItemInfo
	4,  // 2: Pb.Net_Backpack_GetBackpackInfoRet.BackpackInfo:type_name -> Pb.Base_Backpack_BackpackInfo
	20, // 3: Pb.Net_Backpack_BackpackUpdateRet.UpdateItemList:type_name -> Pb.Net_Backpack_BackpackUpdateRet.UpdateItemListEntry
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_Net_Backpack_proto_init() }
func file_Net_Backpack_proto_init() {
	if File_Net_Backpack_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Net_Backpack_proto_rawDesc), len(file_Net_Backpack_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Net_Backpack_proto_goTypes,
		DependencyIndexes: file_Net_Backpack_proto_depIdxs,
		EnumInfos:         file_Net_Backpack_proto_enumTypes,
		MessageInfos:      file_Net_Backpack_proto_msgTypes,
	}.Build()
	File_Net_Backpack_proto = out.File
	file_Net_Backpack_proto_goTypes = nil
	file_Net_Backpack_proto_depIdxs = nil
}
